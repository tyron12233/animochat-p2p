{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/ui/background-elements.tsx"],"sourcesContent":["export default function BackgroundElements() {\n    return (\n        <div className=\"fixed inset-0 overflow-hidden pointer-events-none z-5\">\n            {/* Floating Circles */}\n            <div className=\"absolute top-1/4 left-1/4 w-24 h-24 bg-gradient-to-r from-green-100 to-green-50 rounded-full opacity-50 animate-float mix-blend-multiply\"></div>\n\n            {/* Animated Blobs */}\n            <div className=\"absolute top-1/3 right-32 w-48 h-48 bg-green-100 rounded-full opacity-20 animate-blob animation-delay-2000\"></div>\n\n            {/* Floating Squares */}\n            <div className=\"absolute top-2/3 left-16 w-16 h-16 bg-green-50 rotate-45 opacity-30 animate-float animation-delay-3000\"></div>\n\n            {/* Pulse Elements */}\n            <div className=\"absolute bottom-32 right-1/4\">\n                <div className=\"w-32 h-32 border-4 border-green-100 rounded-full animate-pulse opacity-30\"></div>\n            </div>\n\n            {/* Abstract Grid Pattern */}\n            <div className=\"absolute inset-0 opacity-10\">\n                <div className=\"h-full w-full bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]\"></div>\n            </div>\n\n            {/* Animated Lines */}\n            <div className=\"absolute top-0 left-0 w-1/3 h-full animate-line\">\n                <div className=\"w-px h-full bg-gradient-to-b from-transparent via-green-100 to-transparent\"></div>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBACI,6LAAC;QAAI,WAAU;;0BAEX,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;0BAInB,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;0BAInB,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAI/B;KA5BwB","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/lib/utils.tsx"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACtC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACxB","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/src/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> { }\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,uHAAA,CAAA,KAAE,AAAD,EACV,6VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/src/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,uHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/interests-selector.tsx"],"sourcesContent":["// components/InterestSelector.tsx\n\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { X } from 'lucide-react';\n\n// Assuming this type is defined in a central types file\nexport type PopularInterest = {\n  interest: string;\n  count: number;\n};\n\n// --- PROPS INTERFACE ---\ninterface InterestSelectorProps {\n  interests: Set<string>;\n  onInterestsChange: (newInterests: Set<string>) => void;\n  onFindMatch: (interests: Set<string>) => void;\n  isConnecting: boolean; // Prop to indicate loading/connecting state\n  status: string; // Prop to display the current status message\n}\n\n// --- CHILD COMPONENT ---\nconst InterestTag = ({ text, onRemove }: { text: string; onRemove: (text: string) => void }) => (\n    <div className=\"tag inline-flex items-center bg-green-600 text-white py-1 px-3 rounded-full m-1 font-medium text-sm transition-all duration-200 animate-in fade-in-50\">\n        <span>{text}</span>\n        <button\n            onClick={() => onRemove(text)}\n            className=\"ml-2 bg-black/10 hover:bg-black/30 rounded-full w-5 h-5 flex items-center justify-center transition-colors\"\n            aria-label={`Remove ${text}`}\n        >\n            <X size={14} />\n        </button>\n    </div>\n);\n\n// --- HELPER COMPONENT ---\nconst LoadingSpinner = () => (\n    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n    </svg>\n);\n\n\n// --- MAIN COMPONENT ---\nexport default function InterestSelector({ interests, onInterestsChange, onFindMatch, isConnecting, status }: InterestSelectorProps) {\n  const [currentInput, setCurrentInput] = useState(\"\");\n  const [popularInterests, setPopularInterests] = useState<PopularInterest[]>([]);\n  const [isLoadingTopics, setIsLoadingTopics] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const API_BASE_URL = 'https://animochat-turn-server.onrender.com';\n\n  useEffect(() => {\n    const fetchPopularInterests = async () => {\n        setIsLoadingTopics(true);\n        try {\n            const response = await fetch(`${API_BASE_URL}/interests/popular`);\n            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n            const data: PopularInterest[] = await response.json();\n            setPopularInterests(data);\n        } catch (e) {\n            console.error('Failed to fetch popular interests:', e);\n            setError('Could not load topics.');\n        } finally {\n            setIsLoadingTopics(false);\n        }\n    };\n    fetchPopularInterests();\n  }, []);\n\n  const addInterest = (interest: string) => {\n    const cleanedInterest = interest.trim().toUpperCase();\n    if (cleanedInterest && !interests.has(cleanedInterest)) {\n        onInterestsChange(new Set(interests).add(cleanedInterest));\n    }\n    setCurrentInput(\"\");\n  };\n\n  const removeInterest = (interestToRemove: string) => {\n    const newInterests = new Set(interests);\n    newInterests.delete(interestToRemove);\n    onInterestsChange(newInterests);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n          e.preventDefault();\n          addInterest(currentInput);\n      }\n  };\n  \n  const handleFindMatch = () => {\n    let finalInterests = new Set(interests);\n    if (currentInput.trim() && !finalInterests.has(currentInput.trim().toUpperCase())) {\n        finalInterests = new Set(finalInterests).add(currentInput.trim().toUpperCase());\n        onInterestsChange(finalInterests); // Update parent state immediately\n    }\n    onFindMatch(finalInterests);\n  };\n\n  const renderPopularInterests = () => {\n    if (isLoadingTopics) return <p className=\"text-sm text-gray-400\">Loading topics...</p>;\n    if (error) return <p className=\"text-sm text-red-500\">{error}</p>;\n    if (popularInterests.length === 0) return <p className=\"text-sm text-gray-400\">No active topics.</p>;\n    return popularInterests.map(({ interest, count }) => (\n      <button key={interest} onClick={() => addInterest(interest)} className=\"bg-green-100 text-green-800 text-xs font-semibold px-3 py-1.5 rounded-full hover:bg-green-200 hover:scale-105 transition-all duration-200\">\n        <span>{interest}</span>\n        <span className=\"bg-green-200 text-green-900 text-[10px] font-bold px-1.5 py-0.5 rounded-full ml-2\">{count}</span>\n      </button>\n    ));\n  };\n\n  return (\n    <>\n      <div className=\"w-[350px] max-w-full mx-auto\">\n        <div className=\"flex flex-wrap justify-center gap-2 min-h-[36px] mb-4\">\n            {Array.from(interests).map(interest => <InterestTag key={interest} text={interest} onRemove={removeInterest} />)}\n        </div>\n        <Input id=\"interest-input\" type=\"text\" value={currentInput} onChange={(e) => setCurrentInput(e.target.value)} onKeyDown={handleKeyDown} className=\"rounded-full py-6 px-6 focus-visible:border-green-500 focus-visible:ring-green-500 ring-offset-1 text-center\" placeholder=\"Type an interest & press Enter\" maxLength={26}/>\n      </div>\n\n      <div className=\"mt-8 text-center\">\n        <h3 className=\"text-sm font-bold text-gray-500 uppercase tracking-wider mb-4\">Popular Topics</h3>\n        <div className=\"flex flex-wrap justify-center gap-2 max-w-md mx-auto\">{renderPopularInterests()}</div>\n      </div>\n      \n      <div className=\"mt-12 w-[350px] max-w-full mx-auto\">\n        <Button onClick={handleFindMatch} disabled={isConnecting || (interests.size === 0 && !currentInput.trim())} className=\"w-full rounded-full py-6 bg-green-600 hover:bg-green-700 text-white font-bold text-base disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center\">\n          {isConnecting ? (\n            <>\n              <LoadingSpinner />\n              {status}\n            </>\n          ) : (\n            'Find Match'\n          )}\n        </Button>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/lib/types.ts"],"sourcesContent":["import type { DataConnection as PeerJSDataConnection } from 'peerjs';\n\n// Re-exporting the type for easier use across the app\nexport type DataConnection = PeerJSDataConnection;\n\nexport type Screen = 'intro' | 'matchmaking' | 'chat';\n\nexport interface ChatMessage {\n    text: string;\n    sender: 'You' | 'Stranger' | 'System';\n}\n\nexport interface PopularInterest {\n    interest: string;\n    count: number;\n}\n\nexport interface User {\n    id: string;\n}\n\nexport type MatchmakingData =\n    | { state: 'WAITING' }\n    | { state: 'MATCHED'; matchedUserId: string; interest: string; }\n    | { state: 'ERROR'; message: string; };\n\nexport interface Reaction {\n  user_id: string;\n  emoji: string;\n}\n\nexport interface Message {\n  id: string;\n  sender: string;\n  content: string;\n  session_id: string | undefined;\n  created_at?: string;\n  replyingTo?: any;\n  reactions?: Reaction[];\n  edited?: boolean;\n  visible_to?: string[];\n  type?: string;\n}\n\nexport interface ChatTheme {\n  /** A unique identifier for the theme */\n  id: string;\n  /** The display name of the theme */\n  name: string;\n\n  /**\n   * The main accent color used throughout the chat interface.\n   * This color will be used for the header background and send button background\n   * unless overridden by their respective properties.\n   * Example: \"#4F46E5\"\n   */\n  accentColor: string;\n\n  /**\n   * The background gradient for the current user’s chat bubble.\n   * Example: \"linear-gradient(90deg, #34D399, #10B981)\"\n   */\n  userBubbleGradient: string;\n  /**\n   * The text color for the current user’s chat bubble.\n   * Example: \"#ffffff\"\n   */\n  userTextColor: string;\n\n  /**\n   * Whether the current user’s chat bubble should be animated.\n   * Example: true\n   */\n  userAnimated: boolean;\n\n  /**\n   * The background gradient for other users’ chat bubbles.\n   * Example: \"linear-gradient(90deg, #F3F4F6, #E5E7EB)\"\n   */\n  otherBubbleGradient: string;\n  /**\n   * The text color for other users’ chat bubbles.\n   * Example: \"#1F2937\"\n   */\n  otherTextColor: string;\n\n  /**\n   * Whether the other user’s chat bubble should be animated.\n   * Example: true\n   */\n  otherAnimated: boolean;\n\n  /**\n   * The background gradient for the chat area.\n   * (Typically applied on a higher-level container.)\n   * Example: \"linear-gradient(180deg, #ffffff, #f0f0f0)\"\n   */\n  chatBackground: string;\n}\n\n\n\nexport const DEFAULT_THEME: ChatTheme = {\n  id: \"default\",\n  name: \"Default Chat Theme\",\n\n  // bg-green-600\n  accentColor: \"#16a34a\",\n  userBubbleGradient: \"linear-gradient(90deg, #16a34a, #16a34a)\",\n  userTextColor: \"#ffffff\",\n  otherBubbleGradient: \"linear-gradient(90deg, #f3f4f6, #f3f4f6)\",\n  otherTextColor: \"#1F2937\",\n  otherAnimated: false,\n  userAnimated: false,\n  chatBackground: \"linear-gradient(180deg, #ffffff, #ffffff)\",\n};"],"names":[],"mappings":";;;AAsGO,MAAM,gBAA2B;IACtC,IAAI;IACJ,MAAM;IAEN,eAAe;IACf,aAAa;IACb,oBAAoB;IACpB,eAAe;IACf,qBAAqB;IACrB,gBAAgB;IAChB,eAAe;IACf,cAAc;IACd,gBAAgB;AAClB","debugId":null}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/lib/color-utils.ts"],"sourcesContent":["export function getTextColor(bgColor: string) {\n    // if bgColor is linear gradient calculate the average color\n    if (bgColor.includes(\"linear-gradient\")) {\n        const colors = bgColor.match(/#([0-9A-F]{6}|[0-9A-F]{3})/gi);\n        if (colors) {\n            const total = colors.reduce((acc, color) => {\n                const c = color.charAt(0) === \"#\"\n                    ? color.substring(1, 7)\n                    : color;\n                const r = parseInt(c.substring(0, 2), 16);\n                const g = parseInt(c.substring(2, 4), 16);\n                const b = parseInt(c.substring(4, 6), 16);\n                return acc + r * 0.299 + g * 0.587 + b * 0.114;\n            }, 0);\n            return total / colors.length > 186 ? \"#000000\" : \"#ffffff\";\n        }\n    }\n    const color = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(color.substring(0, 2), 16);\n    const g = parseInt(color.substring(2, 4), 16);\n    const b = parseInt(color.substring(4, 6), 16);\n    return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"#000000\" : \"#ffffff\";\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,aAAa,OAAe;IACxC,4DAA4D;IAC5D,IAAI,QAAQ,QAAQ,CAAC,oBAAoB;QACrC,MAAM,SAAS,QAAQ,KAAK,CAAC;QAC7B,IAAI,QAAQ;YACR,MAAM,QAAQ,OAAO,MAAM,CAAC,CAAC,KAAK;gBAC9B,MAAM,IAAI,MAAM,MAAM,CAAC,OAAO,MACxB,MAAM,SAAS,CAAC,GAAG,KACnB;gBACN,MAAM,IAAI,SAAS,EAAE,SAAS,CAAC,GAAG,IAAI;gBACtC,MAAM,IAAI,SAAS,EAAE,SAAS,CAAC,GAAG,IAAI;gBACtC,MAAM,IAAI,SAAS,EAAE,SAAS,CAAC,GAAG,IAAI;gBACtC,OAAO,MAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI;YAC7C,GAAG;YACH,OAAO,QAAQ,OAAO,MAAM,GAAG,MAAM,YAAY;QACrD;IACJ;IACA,MAAM,QAAQ,QAAQ,MAAM,CAAC,OAAO,MAAM,QAAQ,SAAS,CAAC,GAAG,KAAK;IACpE,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,IAAI;IAC1C,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,IAAI;IAC1C,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,GAAG,IAAI;IAC1C,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,MAAM,YAAY;AACjE","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/action-icons.tsx"],"sourcesContent":["import { ChatTheme } from \"@/src/lib/types\";\nimport { SmileIcon } from \"lucide-react\";\n\n/* ActionIcons Component */\ninterface ActionIconsProps {\n  isUserMessage: boolean;\n  reply: () => void;\n  onOpenEmojiMenu: () => void;\n  theme: ChatTheme;\n  visible: boolean;\n  isDeleted?: boolean; // New prop to indicate if message is deleted\n}\n\nexport default function ActionIcons({\n  visible,\n  isUserMessage,\n  reply,\n  onOpenEmojiMenu,\n  theme,\n  isDeleted = false, // Default to false if not provided\n}: ActionIconsProps) {\n  return (\n    <div\n      key=\"actions\"\n      className={`flex flex-row h-full min-h-full justify-center space-x-1 ${\n        visible ? \"visible\" : \"invisible\"\n      }`}\n    >\n      <div\n        className={`${\n          isUserMessage ? \"mr-1 mt-1\" : \"ml-2 mt-1\"\n        } h-[2rem] rounded-full transition-colors p-2 cursor-pointer hover:opacity-100 opacity-80`}\n        style={{\n          background: isUserMessage\n            ? theme.userBubbleGradient\n            : theme.otherBubbleGradient,\n          color: !isUserMessage ? theme.otherTextColor : theme.userTextColor,\n        }}\n        onClick={reply}\n      >\n        <svg\n          className={`w-4 h-4`}\n          fill=\"none\"\n          strokeWidth=\"2\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\" />\n        </svg>\n      </div>\n      {/* Only show emoji button if the message is not deleted */}\n      {!isDeleted && (\n        <div\n          className=\"mt-1 h-[2rem] opacity-80 rounded-full transition-colors p-2 cursor-pointer hover:opacity-100\"\n          onClick={onOpenEmojiMenu}\n          style={{\n            background: isUserMessage\n              ? theme.userBubbleGradient\n              : theme.otherBubbleGradient,\n          }}\n        >\n          <SmileIcon\n            className={`w-4 h-4`}\n            style={{\n              color: !isUserMessage\n                ? theme.otherTextColor\n                : theme.userTextColor,\n            }}\n            fill=\"none\"\n            strokeWidth=\"2\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          />\n        </div>\n      )}\n      {isUserMessage && <div className=\"w-1\"></div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAYe,SAAS,YAAY,EAClC,OAAO,EACP,aAAa,EACb,KAAK,EACL,eAAe,EACf,KAAK,EACL,YAAY,KAAK,EACA;IACjB,qBACE,6LAAC;QAEC,WAAW,CAAC,yDAAyD,EACnE,UAAU,YAAY,aACtB;;0BAEF,6LAAC;gBACC,WAAW,GACT,gBAAgB,cAAc,YAC/B,wFAAwF,CAAC;gBAC1F,OAAO;oBACL,YAAY,gBACR,MAAM,kBAAkB,GACxB,MAAM,mBAAmB;oBAC7B,OAAO,CAAC,gBAAgB,MAAM,cAAc,GAAG,MAAM,aAAa;gBACpE;gBACA,SAAS;0BAET,cAAA,6LAAC;oBACC,WAAW,CAAC,OAAO,CAAC;oBACpB,MAAK;oBACL,aAAY;oBACZ,QAAO;oBACP,SAAQ;8BAER,cAAA,6LAAC;wBAAK,GAAE;;;;;;;;;;;;;;;;YAIX,CAAC,2BACA,6LAAC;gBACC,WAAU;gBACV,SAAS;gBACT,OAAO;oBACL,YAAY,gBACR,MAAM,kBAAkB,GACxB,MAAM,mBAAmB;gBAC/B;0BAEA,cAAA,6LAAC,2MAAA,CAAA,YAAS;oBACR,WAAW,CAAC,OAAO,CAAC;oBACpB,OAAO;wBACL,OAAO,CAAC,gBACJ,MAAM,cAAc,GACpB,MAAM,aAAa;oBACzB;oBACA,MAAK;oBACL,aAAY;oBACZ,QAAO;oBACP,SAAQ;;;;;;;;;;;YAIb,+BAAiB,6LAAC;gBAAI,WAAU;;;;;;;OApD7B;;;;;AAuDV;KAjEwB","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/reply-indicator.tsx"],"sourcesContent":["import { ChatTheme } from \"@/src/lib/types\";\nimport Image from \"next/image\";\n\n/* ReplyIndicator Component */\ninterface ReplyIndicatorProps {\n  message: any;\n  isUserMessage: boolean;\n  theme: ChatTheme;\n}\n\nexport default function ReplyIndicator({\n  message,\n  isUserMessage,\n  theme,\n}: ReplyIndicatorProps) {\n  if (!message) return null;\n\n  if (message.type === \"image\") {\n    return (\n      <ReplyIndicatorImage\n        message={message}\n        isUserMessage={isUserMessage}\n        theme={theme}\n      />\n    );\n  }\n  return (\n    <>\n      <div\n        className=\"rounded-tl-3xl rounded-tr-3xl rounded-b-3xl px-3 pt-2 text-sm opacity-[0.65] pb-[32px] -mb-[32px] -z-20\"\n        style={{\n          background: isUserMessage\n            ? theme.userBubbleGradient\n            : theme.otherBubbleGradient,\n          color: isUserMessage ? theme.userTextColor : theme.otherTextColor,\n        }}\n      >\n        <p className=\"break-words whitespace-pre-wrap\">\n\n          {message.type === \"deleted\" ? (\n            \"Deleted message.\"\n          ) : (\n            message.content\n          )}\n        </p>\n      </div>\n    </>\n  );\n}\n\nfunction ReplyIndicatorImage({\n  message,\n  isUserMessage,\n  theme,\n}: ReplyIndicatorProps) {\n  // background is image\n  return (\n    <div className=\"pb-[32px] -mb-[32px] rounded-tl-3xl rounded-tr-3xl rounded-b-3xl\">\n      <Image\n        src={message.content}\n        alt=\"image\"\n        className=\"rounded-tl-3xl rounded-tr-3xl rounded-b-3xl object-contain mb-1\"\n        width={80}\n        height={100}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AASe,SAAS,eAAe,EACrC,OAAO,EACP,aAAa,EACb,KAAK,EACe;IACpB,IAAI,CAAC,SAAS,OAAO;IAErB,IAAI,QAAQ,IAAI,KAAK,SAAS;QAC5B,qBACE,6LAAC;YACC,SAAS;YACT,eAAe;YACf,OAAO;;;;;;IAGb;IACA,qBACE;kBACE,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBACL,YAAY,gBACR,MAAM,kBAAkB,GACxB,MAAM,mBAAmB;gBAC7B,OAAO,gBAAgB,MAAM,aAAa,GAAG,MAAM,cAAc;YACnE;sBAEA,cAAA,6LAAC;gBAAE,WAAU;0BAEV,QAAQ,IAAI,KAAK,YAChB,qBAEA,QAAQ,OAAO;;;;;;;;;;;;AAM3B;KAtCwB;AAwCxB,SAAS,oBAAoB,EAC3B,OAAO,EACP,aAAa,EACb,KAAK,EACe;IACpB,sBAAsB;IACtB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;YACJ,KAAK,QAAQ,OAAO;YACpB,KAAI;YACJ,WAAU;YACV,OAAO;YACP,QAAQ;;;;;;;;;;;AAIhB;MAjBS","debugId":null}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/reaction-bubble.tsx"],"sourcesContent":["\nimport { ChatTheme, User } from \"@/src/lib/types\";\nimport { motion } from \"motion/react\";\n\n\n/* ReactionBubble Component */\ninterface ReactionBubbleProps {\n  message: any;\n  user: User;\n  theme: ChatTheme;\n}\n\nexport default function ReactionBubble({ message, user, theme }: ReactionBubbleProps) {\n  const reactions = message.reactions;\n  if (!reactions || reactions.length === 0) return null;\n  const reactionCount = reactions.length;\n  const reactionEmojis: any[] = Array.from(\n    new Set(reactions.map((reaction: any) => reaction.emoji))\n  );\n  const userReaction = reactions.find(\n    (reaction: any) => reaction.user_id === user.id\n  );\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0 }}\n      transition={{ duration: 0.2, ease: \"easeOut\" }}\n      className=\"flex justify-end\"\n    >\n      <div className=\"self-end text-xs text-black relative rounded-full mt-auto bg-gray-200 border-2 border-white p-1.5 -top-2\">\n        <div className=\"flex justify-center\">\n          {reactionEmojis.map((emoji: string, index: number) => (\n            <div key={index} className=\"text-center\">\n              {emoji}\n            </div>\n          ))}\n          <p className=\"pl-1\">\n            <span\n              style={{\n                // if user reacted use themeAccentColor\n                color: userReaction ? theme.accentColor : \"black\",\n              }}\n            >\n              {reactionCount}\n            </span>\n          </p>\n        </div>\n      </div>\n    </motion.div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;AAUe,SAAS,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAuB;IAClF,MAAM,YAAY,QAAQ,SAAS;IACnC,IAAI,CAAC,aAAa,UAAU,MAAM,KAAK,GAAG,OAAO;IACjD,MAAM,gBAAgB,UAAU,MAAM;IACtC,MAAM,iBAAwB,MAAM,IAAI,CACtC,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC,WAAkB,SAAS,KAAK;IAEzD,MAAM,eAAe,UAAU,IAAI,CACjC,CAAC,WAAkB,SAAS,OAAO,KAAK,KAAK,EAAE;IAEjD,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,OAAO;QAAE;QAChC,SAAS;YAAE,SAAS;YAAG,OAAO;QAAE;QAChC,MAAM;YAAE,SAAS;YAAG,OAAO;QAAE;QAC7B,YAAY;YAAE,UAAU;YAAK,MAAM;QAAU;QAC7C,WAAU;kBAEV,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;oBACZ,eAAe,GAAG,CAAC,CAAC,OAAe,sBAClC,6LAAC;4BAAgB,WAAU;sCACxB;2BADO;;;;;kCAIZ,6LAAC;wBAAE,WAAU;kCACX,cAAA,6LAAC;4BACC,OAAO;gCACL,uCAAuC;gCACvC,OAAO,eAAe,MAAM,WAAW,GAAG;4BAC5C;sCAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf;KAvCwB","debugId":null}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/hooks/use-long-press-hack.ts"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport type { TouchEvent, TouchEventHandler } from \"react\";\n\ninterface LongPressOptions {\n  delay?: number;\n}\n\n/**\n * A hook to detect long press events on touch devices.\n *\n * It sets a timer when the user touches the element and calls the provided\n * callback if the press lasts longer than the specified delay.\n * Additionally, if the user has not moved their finger, it stops the event propagation\n * on touch end.\n *\n * @param callback - Function to call when a long press is detected.\n * @param options - Optional configuration object ({ delay: number }).\n * @returns Object containing touch event handlers.\n */\nexport function useLongPressHack<T extends HTMLElement>(\n  callback: (event: TouchEvent<T>) => void,\n  { delay = 500 }: LongPressOptions = {}\n) {\n  const timerRef = useRef<number | null>(null);\n  // This ref tracks if the user moved during the touch.\n  const hasMovedRef = useRef<boolean>(false);\n\n  // Clears the long press timer.\n  const clearTimer = useCallback(() => {\n    if (timerRef.current !== null) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n  }, []);\n\n  // Starts the long press timer.\n  const onTouchStart: TouchEventHandler<T> = useCallback(\n    (event) => {\n      hasMovedRef.current = false;\n      timerRef.current = window.setTimeout(() => {\n        callback(event);\n      }, delay);\n    },\n    [callback, delay]\n  );\n\n  // Marks that a move occurred and cancels the timer.\n  const onTouchMove: TouchEventHandler<T> = useCallback(\n    (event) => {\n      hasMovedRef.current = true;\n      clearTimer();\n    },\n    [clearTimer]\n  );\n\n  // On touch end, stops propagation if the user hasn't moved, and clears the timer.\n  const onTouchEnd: TouchEventHandler<T> = useCallback(\n    (event) => {\n      if (!hasMovedRef.current) {\n        event.stopPropagation();\n      }\n      clearTimer();\n    },\n    [clearTimer]\n  );\n\n  // Clears the timer if the touch is canceled.\n  const onTouchCancel: TouchEventHandler<T> = useCallback(\n    (event) => {\n      clearTimer();\n    },\n    [clearTimer]\n  );\n\n  return {\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onTouchCancel,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;;AAmBO,SAAS,iBACd,QAAwC,EACxC,EAAE,QAAQ,GAAG,EAAoB,GAAG,CAAC,CAAC;;IAEtC,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAiB;IACvC,sDAAsD;IACtD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAW;IAEpC,+BAA+B;IAC/B,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAAE;YAC7B,IAAI,SAAS,OAAO,KAAK,MAAM;gBAC7B,aAAa,SAAS,OAAO;gBAC7B,SAAS,OAAO,GAAG;YACrB;QACF;mDAAG,EAAE;IAEL,+BAA+B;IAC/B,MAAM,eAAqC,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDACnD,CAAC;YACC,YAAY,OAAO,GAAG;YACtB,SAAS,OAAO,GAAG,OAAO,UAAU;8DAAC;oBACnC,SAAS;gBACX;6DAAG;QACL;qDACA;QAAC;QAAU;KAAM;IAGnB,oDAAoD;IACpD,MAAM,cAAoC,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qDAClD,CAAC;YACC,YAAY,OAAO,GAAG;YACtB;QACF;oDACA;QAAC;KAAW;IAGd,kFAAkF;IAClF,MAAM,aAAmC,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDACjD,CAAC;YACC,IAAI,CAAC,YAAY,OAAO,EAAE;gBACxB,MAAM,eAAe;YACvB;YACA;QACF;mDACA;QAAC;KAAW;IAGd,6CAA6C;IAC7C,MAAM,gBAAsC,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDACpD,CAAC;YACC;QACF;sDACA;QAAC;KAAW;IAGd,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;GA7DgB","debugId":null}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/message-bubble.tsx"],"sourcesContent":["import { getTextColor } from \"@/src/lib/color-utils\";\nimport Linkify from \"linkify-react\";\nimport {\n  motion,\n  PanInfo,\n  useDragControls,\n  useMotionValue,\n  useTransform,\n} from \"motion/react\";\nimport {\n  LongPressResult,\n  LongPressTouchHandlers,\n  useLongPress,\n} from \"use-long-press\";\nimport ActionIcons from \"./action-icons\";\nimport ReplyIndicator from \"./reply-indicator\";\nimport ReactionBubble from \"./reaction-bubble\";\nimport { SwipeIcon } from \"./swipe-icon\";\nimport { cn } from \"@/src/lib/utils\";\nimport { Reply } from \"lucide-react\";\nimport { useLongPressHack } from \"@/src/hooks/use-long-press-hack\";\nimport Image from \"next/image\";\nimport { useState } from \"react\";\nimport { PhotoView } from \"react-photo-view\";\nimport { ChatTheme, DEFAULT_THEME, Message, User } from \"@/src/lib/types\";\n\nfunction isOnlyEmojis(str: string): boolean {\n  const trimmed = str.trim();\n  if (!trimmed) return false;\n  // Remove all whitespace\n  const noSpaces = trimmed.replace(/\\s+/g, \"\");\n  // This regex uses Unicode property escapes to match emoji.\n  // (Note: Ensure your environment supports Unicode regex.)\n  const emojiRegex = /(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F)/gu;\n  const matches = noSpaces.match(emojiRegex);\n  // If there are matches and their concatenation equals the full string,\n  // then the string is composed solely of emojis.\n  return matches ? matches.join(\"\") === noSpaces : false;\n}\n\nfunction countEmojis(str: string): number {\n  const noSpaces = str.trim().replace(/\\s+/g, \"\");\n  const emojiRegex = /(\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F)/gu;\n  const matches = noSpaces.match(emojiRegex);\n  return matches ? matches.length : 0;\n}\n\nfunction getRoundedCorners(\n  isUserMessage: boolean,\n  hasPrevious: boolean,\n  hasNext: boolean\n): string {\n  if (isUserMessage) {\n    return `rounded-tl-3xl rounded-bl-3xl ${\n      hasPrevious ? \"rounded-tr-sm\" : \"rounded-tr-3xl\"\n    } ${hasNext ? \"rounded-br-sm\" : \"rounded-br-3xl\"}`;\n  } else {\n    return `rounded-tr-3xl rounded-br-3xl ${\n      hasPrevious ? \"rounded-tl-sm\" : \"rounded-tl-3xl\"\n    } ${hasNext ? \"rounded-bl-sm\" : \"rounded-bl-3xl\"}`;\n  }\n}\n\nexport interface MessageBubbleProps {\n  message: any;\n  user: User;\n  hovered: boolean;\n  reply: () => void;\n  onReact: (emoji: string | null) => void;\n  onOpenEmojiMenu: () => void;\n  onResendMessage: (message: Message) => void;\n  animate?: boolean;\n  theme?: ChatTheme;\n  advertisementMessageId?: string | null;\n  onLinkClick?: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n}\n\nexport default function MessageBubble({\n  message,\n  user,\n  hovered,\n  reply,\n  animate = false,\n  onOpenEmojiMenu,\n  onResendMessage,\n  theme = DEFAULT_THEME,\n  advertisementMessageId,\n  onLinkClick,\n  onReact,\n}: MessageBubbleProps) {\n  const isUserMessage = message.sender === user.id;\n  const roundedCorners = getRoundedCorners(\n    isUserMessage,\n    message.hasPrevious,\n    message.hasNext\n  );\n  const sending = message.status === \"sending\";\n  const error = message.status === \"error\";\n  const edited = message.edited ?? false;\n\n  const messageContent = message.content;\n  const isLargeEmojiMessage =\n    isOnlyEmojis(messageContent) && countEmojis(messageContent) <= 3;\n\n  const x = useMotionValue(0);\n  const replyIconScale = useTransform(\n    x,\n    !isUserMessage ? [0, 30, 40, 50] : [0, -30, -40, -50],\n    [0, 0.5, 0.8, 1]\n  );\n\n  const handlePan = (\n    event: MouseEvent | TouchEvent | PointerEvent,\n    info: PanInfo\n  ) => {\n    if (isUserMessage && info.offset.x > 0) return; // Only allow right swipe for \"me\" messages\n    if (!isUserMessage && info.offset.x < 0) return; // Only allow left swipe for \"other\" messages\n\n    if (document.querySelector(\"#emoji-overlay-main\")) {\n      x.set(0);\n      if (event instanceof TouchEvent) {\n        const touchEvent = new TouchEvent(\"touchstart\", {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          touches: [event.touches[0] as Touch],\n        });\n        document?.dispatchEvent(touchEvent);\n      }\n      return;\n    }\n\n    x.set(info.offset.x);\n  };\n\n  const handlePanEnd = (\n    event: MouseEvent | TouchEvent | PointerEvent,\n    info: PanInfo\n  ) => {\n    const threshold = 50;\n\n    if (\n      (isUserMessage && info.offset.x < -threshold) ||\n      (!isUserMessage && info.offset.x > threshold)\n    ) {\n      if (!document.querySelector(\"#emoji-overlay-main\")) {\n        reply();\n      }\n    }\n\n    x.set(0);\n  };\n\n  const longPressHandler = useLongPressHack<HTMLDivElement>((event) => {\n    if (message.type === \"deleted\") return;\n\n    onOpenEmojiMenu();\n\n    let touchEvent = new TouchEvent(\"pointerup\", {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n    event.target.dispatchEvent(touchEvent);\n  });\n\n  return (\n    <div\n      key={message.id}\n      className={`relative flex w-full items-center ${\n        isUserMessage ? \"justify-end\" : \"justify-start\"\n      }`}\n    >\n      <motion.div\n        className={cn(\n          \"absolute p-2.5 rounded-full\",\n          isUserMessage ? \"right-0\" : \"left-0\"\n        )}\n        style={{\n          background: `${theme.accentColor}15`, // Apply opacity to background\n          scale: replyIconScale,\n        }}\n      >\n        <Reply\n          className={cn(\"w-4 h-4\")}\n          style={{\n            color: theme.accentColor,\n          }}\n        />\n      </motion.div>\n\n      {!error && isUserMessage && (\n        <p\n          className={`opacity-50 text-[0.70rem] self-end pr-2 pb-2 overflow-clip -mr-[80px] ${\n            advertisementMessageId === message.id && !hovered\n              ? \"visible\"\n              : \"invisible\"\n          }`}\n          style={{\n            color: getTextColor(theme.chatBackground),\n          }}\n        >\n          AnimoChat.com\n        </p>\n      )}\n\n      {isUserMessage && (\n        <ActionIcons\n          isUserMessage={message.sender === user.id}\n          visible={hovered}\n          theme={theme}\n          reply={reply}\n          onOpenEmojiMenu={onOpenEmojiMenu}\n          isDeleted={message.type === \"deleted\"}\n        />\n      )}\n\n      {/* display error text */}\n      {error && isUserMessage && (\n        <p\n          className={`opacity-50 text-[0.70rem] self-end pr-2 pb-2 overflow-clip text-red-800`}\n        >\n          Error sending message.{\" \"}\n          <span\n            className=\"underline cursor-pointer\"\n            onClick={() => onResendMessage(message)}\n          >\n            Retry\n          </span>\n        </p>\n      )}\n\n      <motion.div\n        key={message.id + \"-bubble\"}\n        id=\"message-bubble\"\n        dragSnapToOrigin\n        dragTransition={{\n          bounceDamping: 13,\n        }}\n        drag=\"x\"\n        dragConstraints={{ left: 0, right: 0 }}\n        onDrag={handlePan}\n        onDragEnd={handlePanEnd}\n        whileTap={{\n          scale: 0.8,\n        }}\n        style={{\n          x,\n          originX: isUserMessage ? 1 : 0,\n          WebkitTapHighlightColor: \"transparent\",\n        }}\n        onDoubleClick={() => {\n          onReact(\"❤️\");\n        }}\n        {...(message.type !== \"deleted\" && {\n          onContextMenu: (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            onOpenEmojiMenu();\n          },\n        })}\n        {...longPressHandler}\n        initial={\n          animate\n            ? {\n                scale: 0,\n                opacity: 0,\n              }\n            : false\n        }\n        animate={{\n          scale: 1,\n          opacity: 1,\n        }}\n        transition={{\n          type: \"spring\",\n          duration: 0.4,\n        }}\n        className={`max-w-[75%] mb-0.5 flex flex-col ${\n          isUserMessage ? \"items-end\" : \"items-start\"\n        } ${sending ? \"opacity-50\" : \"\"}`}\n      >\n        {edited && <p className=\"text-[0.70rem] px-2 text-gray-500\">Edited</p>}\n\n        {message.replyingTo && (\n          <ReplyIndicator\n            message={message.replyingTo}\n            isUserMessage={isUserMessage}\n            theme={theme}\n          />\n        )}\n\n        {(message.type === null ||\n          message.type === undefined ||\n          message.type === \"text\" ||\n          message.type === \"deleted\") && (\n          <TextMessage\n            isLargeEmojiMessage={isLargeEmojiMessage}\n            message={message}\n            user={user}\n            theme={theme}\n            isUserMessage={isUserMessage}\n            roundedCorners={roundedCorners}\n            onLinkClick={onLinkClick}\n          />\n        )}\n\n        {message.type === \"image\" && (\n          <BlurredImageMessage\n            user={user}\n            message={message}\n            roundedCorners={roundedCorners}\n            isUserMessage={isUserMessage}\n            theme={theme}\n          />\n        )}\n      </motion.div>\n      {!isUserMessage && (\n        <ActionIcons\n          visible={hovered}\n          theme={theme}\n          isUserMessage={false}\n          reply={reply}\n          onOpenEmojiMenu={onOpenEmojiMenu}\n        />\n      )}\n      {!isUserMessage && (\n        <p\n          className={`opacity-50 text-[0.70rem] self-end pl-2 pb-2 -ml-[70px] ${\n            advertisementMessageId === message.id && !hovered\n              ? \"visible\"\n              : \"invisible\"\n          }`}\n          style={{\n            color: getTextColor(theme.chatBackground),\n          }}\n        >\n          AnimoChat.com\n        </p>\n      )}\n    </div>\n  );\n}\n\nfunction BlurredImageMessage({\n  user,\n  message,\n  roundedCorners,\n  isUserMessage,\n  theme,\n}: {\n  user: User;\n  message: Message;\n  roundedCorners: string;\n  isUserMessage: boolean;\n  theme: ChatTheme;\n}) {\n  const [clicked, setClicked] = useState(false);\n  const combinedRounded = `rounded-3xl ${roundedCorners} ${\n    isUserMessage ? \"rounded-tr-3xl\" : \"rounded-tl-3xl\"\n  }`;\n\n  return (\n    <div\n      id=\"image-message-container\"\n      onClick={() => setClicked(true)}\n      style={{ cursor: \"pointer\" }}\n    >\n      {/* Wrap the image inside a container with the desired outline */}\n      <div\n        className={combinedRounded}\n        style={{\n          overflow: \"hidden\",\n          position: \"relative\",\n          // Provide an outline that remains sharp\n          border: \"2px solid transparent\",\n        }}\n      >\n        <PhotoView src={message.content} key={message.id}>\n          <Image\n            width={\n              typeof window !== \"undefined\"\n                ? Math.min(window.innerWidth * 0.6, 300)\n                : 200\n            }\n            height={\n              typeof window !== \"undefined\"\n                ? Math.min(window.innerWidth * 0.6, 300)\n                : 200\n            }\n            className={combinedRounded}\n            src={message.content}\n            alt=\"Image\"\n            style={{\n              filter: clicked ? \"none\" : \"blur(8px)\",\n              transition: \"filter 0.3s ease-in-out\",\n              maxWidth: \"100%\",\n              objectFit: \"contain\",\n              backgroundColor: theme.chatBackground,\n            }}\n            sizes=\"(max-width: 768px) 70vw, 400px\"\n          />\n        </PhotoView>\n        {!clicked && (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              color: theme.userTextColor,\n              backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n              padding: \"4px 8px\",\n              borderRadius: \"0.25rem\",\n              pointerEvents: \"none\",\n              fontSize: \"0.85rem\",\n            }}\n          >\n            (tap to reveal)\n          </div>\n        )}\n      </div>\n      <ReactionBubble message={message} user={user} theme={theme} />\n    </div>\n  );\n}\n\nfunction TextMessage({\n  message,\n  user,\n  theme,\n  isUserMessage,\n  roundedCorners,\n  isLargeEmojiMessage,\n  onLinkClick,\n}: {\n  message: Message;\n  user: User;\n  theme: ChatTheme;\n  isUserMessage: boolean;\n  roundedCorners: string;\n  isLargeEmojiMessage: boolean;\n  onLinkClick?: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n}) {\n  const isDeleted = message.type === \"deleted\";\n\n  return (\n    <>\n      {isLargeEmojiMessage ? (\n        <>\n          <div className=\"px-2 py-2\">\n            <p className=\"text-5xl\">{message.content}</p>\n            <div className=\"mt-4\">\n              <ReactionBubble message={message} user={user} theme={theme} />\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"flex flex-col\">\n          <div className=\"relative group\">\n            <div\n              className={`${roundedCorners} animate-gradient-x`}\n              style={{\n                background: isUserMessage\n                  ? theme.userBubbleGradient\n                  : theme.otherBubbleGradient,\n                backgroundSize: \"200% 100%\",\n                color: isUserMessage\n                  ? theme.userTextColor\n                  : theme.otherTextColor,\n              }}\n            />\n            <div\n              className={`${roundedCorners} relative max-w-full break-words px-3 py-2 ${\n                (!isUserMessage && theme.otherAnimated) ||\n                (isUserMessage && theme.userAnimated)\n                  ? \"bg-white opacity-70\"\n                  : \"\"\n              }`}\n              style={{\n                wordBreak: \"break-word\",\n                overflowWrap: \"break-word\",\n                color: isUserMessage\n                  ? theme.userTextColor\n                  : theme.otherTextColor,\n              }}\n            >\n              <p className=\"break-words whitespace-pre-wrap\">\n                <Linkify\n                  options={{\n                    attributes: {\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      className: \"underline\",\n                    },\n                    render: ({ attributes, content }) => (\n                      <a\n                        {...attributes}\n                        onClick={(e) => {\n                          if (onLinkClick) {\n                            onLinkClick(e);\n                          } else {\n                            e.stopPropagation();\n                          }\n                        }}\n                      >\n                        {content}\n                      </a>\n                    ),\n                  }}\n                >\n                  {isDeleted ? (\n                    // italicize the deleted message (Message has been deleted.)\n                    <span className=\"italic\">Message has been deleted.</span>\n                  ) : (\n                    message.content\n                  )}\n                </Linkify>\n              </p>\n            </div>\n          </div>\n          <ReactionBubble message={message} user={user} theme={theme} />\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/swipeable-message.tsx"],"sourcesContent":["\nimport { RefObject, useEffect, useRef, useState } from \"react\";\nimport { motion } from \"motion/react\";\nimport {\n  LongPressEventType,\n  LongPressResult,\n  LongPressTouchHandlers,\n  useLongPress,\n} from \"use-long-press\";\nimport { SmileIcon } from \"lucide-react\";\nimport \"./swipeable-message.css\";\nimport \"./chat-message-item.css\";\n\nimport { getTextColor } from \"@/src/lib/color-utils\";\nimport Linkify from \"react-linkify\";\nimport MessageBubble from \"./message-bubble\";\nimport { SwipeIcon } from \"./swipe-icon\";\nimport { ChatTheme, DEFAULT_THEME, Message, User } from \"@/src/lib/types\";\n\nexport const SWIPE_THRESHOLD = 50;\nexport const TAP_THRESHOLD = 5;\n\nexport interface MessageProps {\n  message: Message;\n  animate?: boolean;\n  user: User;\n  onSwipe: (messageId: string) => void;\n  onReact: (messageId: string, emoji?: string | null) => void;\n  onStartedSwipe: () => void;\n  onEndedSwipe: () => void;\n  onOpenEmojiMenu?: (message: Message | null) => void;\n  onResendMessage?: (message: Message) => void;\n  theme?: ChatTheme;\n  advertisementMessageId?: string | null;\n  isEmojiMenuOpen?: RefObject<boolean>;\n  onLinkClick?: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n}\n\nexport function SwipeableMessage({\n  message,\n  user,\n  onSwipe,\n  onReact,\n  onStartedSwipe,\n  onEndedSwipe,\n  animate = false,\n  theme = DEFAULT_THEME,\n  advertisementMessageId,\n  onOpenEmojiMenu = () => {},\n  onResendMessage = () => {},\n  isEmojiMenuOpen,\n  onLinkClick,\n}: MessageProps) {\n  const [hovered, setHovered] = useState(false);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n\n\n  useEffect(() => {\n    const isTouch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n\n    setIsTouchDevice(isTouch);\n  }, []);\n\n  return (\n    <div\n      data-message-id={\"message-\" + message.id}\n      className=\"relative px-4 select-none\"\n      onMouseEnter={() => !isTouchDevice && setHovered(true)}\n      onMouseLeave={() => !isTouchDevice && setHovered(false)}\n    >\n      <div\n        key=\"parent-message-bubble flex flex-col\"\n      >\n        <MessageBubble\n          onLinkClick={onLinkClick}\n          animate={animate}\n          key={message.id + \"-bubble\"}\n          message={message}\n          user={user}\n          hovered={hovered}\n          reply={() => onSwipe(message.id)}\n          onOpenEmojiMenu={() => onOpenEmojiMenu(message)}\n          onReact={(emoji) => onReact(message.id, emoji)}\n          onResendMessage={onResendMessage}\n          theme={theme}\n          advertisementMessageId={advertisementMessageId}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface TouchState {\n  startX: number;\n  currentX: number;\n  messageId: string | null;\n}\n\n/* Helper Functions */\nfunction toggleChatContainerScroll(enable: boolean) {\n  const chatContainer = document.getElementById(\"chat-container\");\n  if (chatContainer) {\n    if (enable) chatContainer.classList.remove(\"overflow-y-hidden\");\n    else chatContainer.classList.add(\"overflow-y-hidden\");\n  }\n}\n\n// Allow scolling only when needed\nconst toggleBodyScroll = (disable: boolean) => {\n  if (disable) {\n    document.body.style.overflow = \"hidden\"; // Disable scrolling\n  } else {\n    document.body.style.overflow = \"\"; // Re-enable scrolling\n  }\n};\n\nfunction getSelectedEmoji(): string | undefined {\n  const emojiContainer = document.getElementById(\"emoji-container\");\n  if (!emojiContainer) return undefined;\n  const emojis = emojiContainer.getElementsByClassName(\"emoji\");\n  for (let i = 0; i < emojis.length; i++) {\n    if (emojis[i].classList.contains(\"selected\")) {\n      return emojis[i].textContent || undefined;\n    }\n  }\n  return undefined;\n}\n\n"],"names":[],"mappings":";;;;;;AACA;AAcA;AAEA;;;;;;;;AAEO,MAAM,kBAAkB;AACxB,MAAM,gBAAgB;AAkBtB,SAAS,iBAAiB,EAC/B,OAAO,EACP,IAAI,EACJ,OAAO,EACP,OAAO,EACP,cAAc,EACd,YAAY,EACZ,UAAU,KAAK,EACf,QAAQ,sHAAA,CAAA,gBAAa,EACrB,sBAAsB,EACtB,kBAAkB,KAAO,CAAC,EAC1B,kBAAkB,KAAO,CAAC,EAC1B,eAAe,EACf,WAAW,EACE;;IACb,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAGnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM,UAAU,kBAAkB,UAAU,UAAU,cAAc,GAAG;YAEvE,iBAAiB;QACnB;qCAAG,EAAE;IAEL,qBACE,6LAAC;QACC,mBAAiB,aAAa,QAAQ,EAAE;QACxC,WAAU;QACV,cAAc,IAAM,CAAC,iBAAiB,WAAW;QACjD,cAAc,IAAM,CAAC,iBAAiB,WAAW;kBAEjD,cAAA,6LAAC;sBAGC,cAAA,6LAAC,kJAAA,CAAA,UAAa;gBACZ,aAAa;gBACb,SAAS;gBAET,SAAS;gBACT,MAAM;gBACN,SAAS;gBACT,OAAO,IAAM,QAAQ,QAAQ,EAAE;gBAC/B,iBAAiB,IAAM,gBAAgB;gBACvC,SAAS,CAAC,QAAU,QAAQ,QAAQ,EAAE,EAAE;gBACxC,iBAAiB;gBACjB,OAAO;gBACP,wBAAwB;eATnB,QAAQ,EAAE,GAAG;;;;;WALhB;;;;;;;;;;AAmBZ;GApDgB;KAAA;AA4DhB,oBAAoB,GACpB,SAAS,0BAA0B,MAAe;IAChD,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,IAAI,eAAe;QACjB,IAAI,QAAQ,cAAc,SAAS,CAAC,MAAM,CAAC;aACtC,cAAc,SAAS,CAAC,GAAG,CAAC;IACnC;AACF;AAEA,kCAAkC;AAClC,MAAM,mBAAmB,CAAC;IACxB,IAAI,SAAS;QACX,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,oBAAoB;IAC/D,OAAO;QACL,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,sBAAsB;IAC3D;AACF;AAEA,SAAS;IACP,MAAM,iBAAiB,SAAS,cAAc,CAAC;IAC/C,IAAI,CAAC,gBAAgB,OAAO;IAC5B,MAAM,SAAS,eAAe,sBAAsB,CAAC;IACrD,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACtC,IAAI,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa;YAC5C,OAAO,MAAM,CAAC,EAAE,CAAC,WAAW,IAAI;QAClC;IACF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1574, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/chat-message-item.tsx"],"sourcesContent":["\nimport { format } from \"date-fns\";\nimport { SwipeableMessage } from \"./swipeable-message\";\nimport { RefObject } from \"react\";\nimport { User, Message, ChatTheme } from \"@/src/lib/types\";\n\ninterface ChatMessageItemProps {\n  index: number;\n  message: any; // any for now\n  user: User;\n  isLast: boolean;\n  onSwipe: (messageId: string) => void;\n  onReact: (messageId: string, reaction?: string | null) => Promise<void>;\n  // called when a swipe is started, to prevent the react menu from opening\n  onStartedSwipe: () => void;\n  onEndedSwipe: () => void;\n  onOpenEmojiMenu: (message: Message | null) => void;\n  onResendMessage: (message: Message) => void;\n  isEmojiMenuOpen: RefObject<boolean>;\n  theme?: ChatTheme;\n  animate?: boolean;\n  secondVisibleElement: string | null;\n  onLinkClick?: (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n}\n\nexport default function ChatMessageItem({\n  index,\n  message,\n  user,\n  animate = false,\n  isLast = false,\n  onSwipe,\n  onStartedSwipe,\n  onEndedSwipe,\n  onReact,\n  onOpenEmojiMenu,\n  onResendMessage,\n  isEmojiMenuOpen,\n  theme,\n  secondVisibleElement,\n  onLinkClick,\n}: ChatMessageItemProps) {\n  if (message.sender === \"system\") {\n    return (\n      <div\n        key={message.id + \"_system\"}\n        className=\"flex justify-center py-4 px-4 text-center\"\n      >\n        <p className=\"text-xs text-gray-500\">{message.content}</p>\n      </div>\n    );\n  }\n\n  const isAdvertisement = index % 5 === 0;\n  const advertisementMessageId = isAdvertisement ? message.id : null;\n\n  return (\n    <div\n      data-is-message=\"true\"\n      data-message-id={message.id}\n      key={\"parent_message_\" + message.id}\n      className=\"max-w-full w-full select-none\"\n    >\n      {message.showTime && (\n        <div key={message.id + \"_time\"} className=\"flex justify-center py-4\">\n          <p className=\"text-xs text-gray-500 font-normal\">\n            {message.created_at &&\n              format(new Date(message.created_at), \"h:mm a\")}\n          </p>\n        </div>\n      )}\n\n      <SwipeableMessage\n        advertisementMessageId={advertisementMessageId}\n        key={message.id + \"_message\"}\n        message={message}\n        animate={animate}\n        user={user}\n        onSwipe={onSwipe}\n        onStartedSwipe={onStartedSwipe}\n        onEndedSwipe={onEndedSwipe}\n        onReact={onReact}\n        onOpenEmojiMenu={onOpenEmojiMenu}\n        onResendMessage={onResendMessage}\n        theme={theme}\n        isEmojiMenuOpen={isEmojiMenuOpen}\n        onLinkClick={onLinkClick}\n      />\n\n      {(isLast || !message.hasNext) && (\n        <div key={message.id + \"_bottom\"} className=\"h-1\" />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAuBe,SAAS,gBAAgB,EACtC,KAAK,EACL,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,SAAS,KAAK,EACd,OAAO,EACP,cAAc,EACd,YAAY,EACZ,OAAO,EACP,eAAe,EACf,eAAe,EACf,eAAe,EACf,KAAK,EACL,oBAAoB,EACpB,WAAW,EACU;IACrB,IAAI,QAAQ,MAAM,KAAK,UAAU;QAC/B,qBACE,6LAAC;YAEC,WAAU;sBAEV,cAAA,6LAAC;gBAAE,WAAU;0BAAyB,QAAQ,OAAO;;;;;;WAHhD,QAAQ,EAAE,GAAG;;;;;IAMxB;IAEA,MAAM,kBAAkB,QAAQ,MAAM;IACtC,MAAM,yBAAyB,kBAAkB,QAAQ,EAAE,GAAG;IAE9D,qBACE,6LAAC;QACC,mBAAgB;QAChB,mBAAiB,QAAQ,EAAE;QAE3B,WAAU;;YAET,QAAQ,QAAQ,kBACf,6LAAC;gBAA+B,WAAU;0BACxC,cAAA,6LAAC;oBAAE,WAAU;8BACV,QAAQ,UAAU,IACjB,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,QAAQ,UAAU,GAAG;;;;;;eAHjC,QAAQ,EAAE,GAAG;;;;;0BAQzB,6LAAC,qJAAA,CAAA,mBAAgB;gBACf,wBAAwB;gBAExB,SAAS;gBACT,SAAS;gBACT,MAAM;gBACN,SAAS;gBACT,gBAAgB;gBAChB,cAAc;gBACd,SAAS;gBACT,iBAAiB;gBACjB,iBAAiB;gBACjB,OAAO;gBACP,iBAAiB;gBACjB,aAAa;eAZR,QAAQ,EAAE,GAAG;;;;;YAenB,CAAC,UAAU,CAAC,QAAQ,OAAO,mBAC1B,6LAAC;gBAAiC,WAAU;eAAlC,QAAQ,EAAE,GAAG;;;;;;OA9BpB,oBAAoB,QAAQ,EAAE;;;;;AAkCzC;KArEwB","debugId":null}},
    {"offset": {"line": 1668, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/hooks/use-actual-messages.tsx"],"sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport { Message } from \"../lib/types\";\n\n// Define the time threshold (e.g., 5 minutes) in milliseconds\nconst TIME_THRESHOLD_MS = 5 * 60 * 1000;\n\nexport function useActualMessages(messages: Message[]): Message[] {\n  const [actualMessages, setActualMessages] = useState<Message[]>([]);\n\n  useEffect(() => {\n    if (!messages || messages.length === 0) {\n      setActualMessages([]);\n      return;\n    }\n\n    let lastShownTimestamp: number | null = null;\n    let processedMessages: any[] = []; // Use a more specific type if available that includes the new properties\n\n    // --- Pass 1: Calculate initial properties including the corrected showTime ---\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      const currentTimestamp = new Date(message.created_at!).getTime();\n      let showTime = false;\n\n      // Check if it's a valid timestamp before proceeding\n      if (!isNaN(currentTimestamp)) {\n        // Determine if time should be shown for this message\n        // Show time if it's the first message considered OR enough time has passed since the last shown time.\n        // Crucially, only *non-system/typing/filler* messages should potentially trigger a timestamp display.\n        if (\n          message.sender !== \"system\" &&\n          message.id !== \"typing\" &&\n          message.id !== \"filler\"\n        ) {\n          if (\n            lastShownTimestamp === null ||\n            currentTimestamp - lastShownTimestamp > TIME_THRESHOLD_MS\n          ) {\n            showTime = true;\n            lastShownTimestamp = currentTimestamp; // Update the last shown time *only* when we decide to show it\n          }\n        }\n      } else {\n         console.warn(\"Invalid date encountered for message:\", message.id); // Log invalid dates\n      }\n\n      processedMessages.push({\n        ...message,\n        // Assign calculated showTime. Keep original created_at!\n        showTime: showTime,\n        // Initialize grouping properties - will be refined in the next pass\n        hasPrevious: false,\n        hasNext: false,\n      });\n    }\n\n    // --- Pass 2: Refine grouping (hasPrevious/hasNext) based on sender, showTime, reactions, replies ---\n    // We need a loop here (not map) to easily modify properties of adjacent elements (like previous.hasNext)\n    for (let i = 0; i < processedMessages.length; i++) {\n        const current = processedMessages[i];\n        const previous = processedMessages[i - 1];\n        const next = processedMessages[i + 1];\n\n        // 1. Initial grouping based on sender continuity\n        current.hasPrevious = !!previous && previous.sender === current.sender;\n        current.hasNext = !!next && next.sender === current.sender;\n\n        // --- Adjust grouping based on various break conditions ---\n\n        // 2. Time Break: If current message shows time, it breaks the chain from the previous message.\n        if (current.showTime && previous) {\n            current.hasPrevious = false;\n            previous.hasNext = false; // Modify the actual previous message object\n        }\n\n        // 3. Reaction Break: If current has reactions, it shouldn't visually connect to the next.\n        if (current.reactions && current.reactions.length > 0 && next) {\n            current.hasNext = false;\n            // Also ensure the next message doesn't think it has a preceding message from the same sender in this group\n             if (next.sender === current.sender) {\n                 next.hasPrevious = false;\n             }\n        }\n\n        // 4. Reply Break (Previous): If current is a reply, break connection with the previous message.\n        if (current.replyingTo && previous) {\n            current.hasPrevious = false;\n             if (previous.sender === current.sender) {\n                previous.hasNext = false;\n             }\n        }\n\n        // 5. Reply Break (Next): If current is a reply, break connection with the next message.\n         if (current.replyingTo && next) {\n            current.hasNext = false;\n             if (next.sender === current.sender) {\n                 next.hasPrevious = false;\n             }\n        }\n\n        // if the previous message is reply, it should not be connected to the current message\n        if (previous && previous.replyingTo) {\n            current.hasPrevious = false;\n            previous.hasNext = false; // Modify the actual previous message object\n        }\n\n        // 6. System/Typing Break: If the *next* message is system or typing, the current message shouldn't link forward.\n        // (This prevents chaining a user message visually into a system message).\n        let effectiveNext = processedMessages[i + 1];\n        if (effectiveNext && (effectiveNext.sender === \"system\" || effectiveNext.id === \"typing\" || effectiveNext.id === \"filler\")) {\n             current.hasNext = false;\n             // We don't necessarily need to set effectiveNext.hasPrevious = false here,\n             // as system/typing messages might have different styling anyway.\n        }\n    }\n\n\n    // --- Pass 3: Final adjustments - Move \"typing\", remove duplicates ---\n\n    // Find and remove the \"typing\" message temporarily\n    let typingMessage: Message | null = null; // Use the extended type if available\n    const typingMessageIndex = processedMessages.findIndex(\n      (message) => message.id === \"typing\"\n    );\n    if (typingMessageIndex !== -1) {\n      typingMessage = processedMessages.splice(typingMessageIndex, 1)[0];\n    }\n\n    // Remove duplicate messages based on ID, keeping the first occurrence\n    const uniqueIds = new Set<string>();\n    const uniqueMessages = processedMessages.filter((message) => {\n      if (uniqueIds.has(message.id)) {\n        return false; // Skip duplicates\n      }\n      uniqueIds.add(message.id);\n      return true; // Keep unique messages\n    });\n\n    // Add the \"typing\" message back to the end if it existed\n    if (typingMessage) {\n      uniqueMessages.push(typingMessage);\n    }\n\n    // Update the state with the fully processed messages\n    setActualMessages(uniqueMessages);\n\n  }, [messages]); // Re-run effect only when the input 'messages' array changes\n\n  return actualMessages;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1808, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/emoji-menu.tsx"],"sourcesContent":["\"use client\";\n\n\nimport { Message } from \"@/src/lib/types\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { useEffect, useLayoutEffect, useRef, useState } from \"react\";\n\nexport const REACTION_EMOJIS = [\"❤️\", \"😆\", \"😮\", \"😢\", \"😭\", \"😡\", \"👍\"];\n\ninterface EmojiMenuProps {\n  isUserMessage: boolean;\n  preselectedEmoji?: { emoji: string };\n  message: Message;\n  messageDiv: HTMLDivElement;\n  onReact: (messageId: string, emoji: string | null) => void;\n  onClose: () => void;\n}\n\nexport default function EmojiMenu({\n  isUserMessage,\n  preselectedEmoji,\n  message,\n  messageDiv,\n  onReact,\n  onClose,\n}: EmojiMenuProps) {\n  // Ref for the emoji container so we can measure its dimensions if needed\n  const emojiContainerRef = useRef<HTMLDivElement>(null);\n\n  // State to hold the computed position\n  const [position, setPosition] = useState({ top: 0, left: 0 });\n\n  const [hoveredEmoji, setHoveredEmoji] = useState<string | null>(null);\n\n  // Use layout effect to measure before paint\n  useLayoutEffect(() => {\n    // get div with id \"message-bubble\"\n    const messageBubble = messageDiv.querySelector(\n      \"#message-bubble\"\n    )! as HTMLDivElement;\n\n    messageBubble.style.position = \"relative\";\n    messageBubble.style.zIndex = \"30\";\n\n    if (messageBubble && emojiContainerRef.current) {\n      const bubbleRect = messageBubble.getBoundingClientRect();\n      const container = emojiContainerRef.current;\n      // Optionally measure container dimensions\n      const containerHeight = container.offsetHeight;\n\n      // position at the top and left of the message bubble\n      // accounting for scroll position\n      let top = bubbleRect.top;\n\n      // add window scroll\n      top += window.scrollY;\n\n      // currently, the top is set to the top of the message bubble\n      // so it will be right above the message bubble\n      // adjust it to be at the top of the message bubble\n      top -= containerHeight + 10;\n\n      // top = Math.max(top, -containerHeight * 4);\n\n      // centered horizontally on the window\n      let left = bubbleRect.right - container.offsetWidth - 16;\n      const isUserMessage = messageBubble.classList.contains(\"items-end\");\n      if (!isUserMessage) {\n        // if the message is from the user, then move the emoji container to the left\n        // so it is right next to the message bubble\n        left = bubbleRect.left - 16;\n      }\n      setPosition({ top, left });\n    }\n\n    return () => {\n      // messageBubble.style.position = \"static\";\n      messageBubble.style.zIndex = \"0\";\n    };\n  }, [messageDiv]);\n\n  useEffect(() => {\n    // Global listener to “capture” pointer moves after the long press\n    const handlePointerMove = (event: PointerEvent) => {\n      // Check if our emoji container is mounted\n      if (!emojiContainerRef.current) return;\n      // Find the element at the pointer coordinates\n      const targetElem = document.elementFromPoint(\n        event.clientX,\n        event.clientY\n      );\n      if (targetElem) {\n        // Look for an emoji element (make sure each emoji element has a data attribute, e.g., data-emoji)\n        const emojiElem = targetElem.closest(\"[data-emoji]\");\n        if (emojiElem) {\n          const emoji = emojiElem.getAttribute(\"data-emoji\");\n          setHoveredEmoji(emoji);\n          return;\n        }\n      }\n      setHoveredEmoji(null);\n    };\n\n    const handlePointerUp = (event: PointerEvent) => {\n        console.log(\"Pointer up event:\", event);\n\n      if (hoveredEmoji) {\n        onReact(\n          message.id,\n          preselectedEmoji?.emoji === hoveredEmoji ? null : hoveredEmoji\n        );\n\n        onClose();\n      }\n    };\n\n    // Listen at the window level so that even if the pointer isn’t directly over our container\n    window.addEventListener(\"pointermove\", handlePointerMove);\n    window.addEventListener(\"pointerup\", handlePointerUp);\n\n    return () => {\n      window.removeEventListener(\"pointermove\", handlePointerMove);\n      window.removeEventListener(\"pointerup\", handlePointerUp);\n    };\n  }, [hoveredEmoji, onReact, onClose, preselectedEmoji, message.id]);\n\n  useEffect(() => {\n    if (emojiContainerRef.current) {\n      // Dispatch a synthetic pointerdown event to “capture” events on this element.\n      const pointerDownEvent = new PointerEvent(\"pointerdown\", {\n        bubbles: true,\n        cancelable: true,\n      });\n      emojiContainerRef.current.dispatchEvent(pointerDownEvent);\n      // You could also call containerRef.current.setPointerCapture(event.pointerId)\n      // if you had access to the pointerId (but that typically comes during an actual pointerdown).\n    }\n  }, []);\n\n  return (\n    <motion.div\n      key=\"emoji-menu\"\n      layout\n      className=\"absolute top-0 left-0 w-screen h-screen\"\n      initial={{\n        userSelect: \"none\",\n        zIndex: 100,\n        opacity: 0,\n        height: 0,\n      }}\n      animate={{\n        opacity: 1,\n        height: \"auto\",\n      }}\n      exit={{\n        opacity: 0,\n        height: 0,\n      }}\n    >\n      <div\n        id=\"emoji-abs-container\"\n        className={`absolute border-box flex z-50 w-full md:w-fit px-4`}\n        style={{\n          position: \"absolute\",\n          top: position.top,\n          left: position.left,\n        }}\n      >\n        <motion.div\n          ref={emojiContainerRef}\n          id=\"emoji-container-wrapper\"\n          className=\"w-full backdrop-blur-md bg-gray-100 py-2 px-5 dark:bg-gray-800/80 shadow-lg rounded-full border border-gray-200 dark:border-gray-700\"\n          initial={{\n            scale: 0.8,\n            opacity: 0,\n            y: 10,\n          }}\n          animate={{\n            scale: 1,\n            opacity: 1,\n            y: 0,\n            transition: {\n              type: \"spring\",\n              stiffness: 300,\n              damping: 20,\n            },\n          }}\n          exit={{\n            scale: 0.8,\n            opacity: 0,\n            y: 10,\n            transition: {\n              duration: 0.15,\n            },\n          }}\n        >\n          <div id=\"emoji-container\" className=\"flex justify-between\">\n            <AnimatePresence>\n              {REACTION_EMOJIS.map((emoji) => (\n                <motion.div\n                  key={emoji}\n                  className={`relative z-10 cursor-pointer rounded-full p-2 ${\n                    preselectedEmoji?.emoji === emoji\n                      ? \"bg-gray-200/80 dark:bg-gray-700/80\"\n                      : hoveredEmoji === emoji\n                      ? \"bg-gray-100/80 dark:bg-gray-600/80\"\n                      : \"\"\n                  }`}\n                //   onClick={() => {\n                //     onReact(\n                //       message.id,\n                //       preselectedEmoji?.emoji === emoji ? null : emoji\n                //     );\n                //     onClose();\n                //   }}\n                  data-emoji={emoji}\n                  animate={{ scale: hoveredEmoji === emoji ? 1.6 : 1 }}\n                  transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                >\n                  <span className=\"text-xl\">{emoji}</span>\n\n                  {/* Selected indicator dot */}\n                  {preselectedEmoji?.emoji === emoji && (\n                    <motion.div\n                      className=\"absolute -bottom-0.5 left-1/2 w-1 h-1 bg-green-500 rounded-full\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      layoutId=\"selectedDot\"\n                      style={{ translateX: \"-50%\" }}\n                    />\n                  )}\n                </motion.div>\n              ))}\n            </AnimatePresence>\n          </div>\n        </motion.div>\n      </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2091, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/context-menu.tsx"],"sourcesContent":["\nimport { motion } from \"motion/react\";\nimport { Copy, Delete, Edit, Reply, Trash } from \"lucide-react\";\nimport { createRef, useLayoutEffect, useState, useEffect, useRef } from \"react\";\nimport { ChatTheme } from \"@/src/lib/types\";\n\ninterface ContextMenuProps {\n  theme: ChatTheme;\n  anchor: HTMLDivElement;\n  onReply: () => void;\n  onCopy: () => void;\n  onEdit: () => void;\n  onClose: () => void;\n  onDelete: () => void;\n}\n\nexport default function ContextMenu({\n  theme,\n  anchor,\n  onReply,\n  onCopy,\n  onEdit,\n  onClose,\n  onDelete\n}: ContextMenuProps) {\n  const messageBuble = anchor.querySelector(\"#message-bubble\")!;\n  const isUserMessage = messageBuble.classList.contains(\"items-end\");\n  \n  // if the message bubble contains a div with the id \"image-message-container\", then it is an image message\n  const isImageMessage = messageBuble.querySelector(\n    \"#image-message-container\"\n  ) !== null;\n\n  const items = [\n    { icon: <Reply className=\"h-4 w-4\" />, text: \"Reply\", onClick: onReply },\n    { icon: <Copy className=\"h-4 w-4\" />, text: \"Copy\", onClick: onCopy },\n    ...(isUserMessage && !isImageMessage\n      ? [{ icon: <Edit className=\"h-4 w-4\" />, text: \"Edit\", onClick: onEdit }]\n      : []),\n\n      // delete message is isUserMessage\n    ...(isUserMessage\n      ? [{ icon: <Trash className=\"h-4 w-4\" />, text: \"Delete\", onClick: onDelete }]\n      : []),\n  ];\n\n  const [position, setPosition] = useState({ top: 0, left: 0 });\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n  const activeIndexRef = useRef<number | null>(null);\n  const contextMenuRef = createRef<HTMLDivElement>();\n\n  // Update the ref so we can always get the latest activeIndex in our pointerup handler\n  useEffect(() => {\n    activeIndexRef.current = activeIndex;\n  }, [activeIndex]);\n\n  useLayoutEffect(() => {\n    if (!anchor || !contextMenuRef.current) return;\n    const messageBuble = anchor.querySelector(\"#message-bubble\")!;\n    const chatContainer = document.querySelector(\"#chat-container\")!;\n\n    const rect = messageBuble.getBoundingClientRect();\n    const contextRect = contextMenuRef.current.getBoundingClientRect();\n\n    let top = rect.bottom + 10;\n    // If the context menu overflows the chat container, position it above the message bubble\n    if (top + contextRect.height > chatContainer.clientHeight / 2) {\n      top = rect.top - contextRect.height - 10;\n\n      // Adjust emoji container if necessary\n      const emojiContainer = document.querySelector(\n        \"#emoji-abs-container\"\n      ) as HTMLDivElement;\n      if (emojiContainer) {\n        emojiContainer.style.top = `${top - contextRect.height}px`;\n        top -= emojiContainer.offsetHeight + 24;\n      }\n    }\n\n    top += window.scrollY;\n    let left = rect.right - contextRect.width - 24;\n    if (!isUserMessage) {\n      left = rect.left;\n    }\n\n    setPosition({ top, left });\n  }, [anchor, isUserMessage]);\n\n  // Global pointer move and pointer up listeners\n  useEffect(() => {\n    const handlePointerMove = (e: PointerEvent) => {\n      if (!contextMenuRef.current) return;\n      const buttons = contextMenuRef.current.querySelectorAll(\"button\");\n      let foundIndex: number | null = null;\n      buttons.forEach((button, index) => {\n        const rect = button.getBoundingClientRect();\n        if (\n          e.clientX >= rect.left &&\n          e.clientX <= rect.right &&\n          e.clientY >= rect.top &&\n          e.clientY <= rect.bottom\n        ) {\n          foundIndex = index;\n        }\n      });\n      setActiveIndex(foundIndex);\n    };\n\n    const handlePointerUp = (_e: PointerEvent) => {\n      if (activeIndexRef.current !== null && contextMenuRef.current) {\n        const buttons = contextMenuRef.current.querySelectorAll(\"button\");\n        const button = buttons[activeIndexRef.current];\n        if (button) {\n          // Trigger the click event on the highlighted item\n          button.click();\n        }\n      }\n    };\n\n    window.addEventListener(\"pointermove\", handlePointerMove);\n    window.addEventListener(\"pointerup\", handlePointerUp);\n\n    // Dispatch pointerdown event on mount to capture events\n    const pointerDownEvent = new PointerEvent(\"pointerdown\", { bubbles: true });\n    window.dispatchEvent(pointerDownEvent);\n\n    return () => {\n      window.removeEventListener(\"pointermove\", handlePointerMove);\n      window.removeEventListener(\"pointerup\", handlePointerUp);\n    };\n  }, []);\n\n  return (\n    <motion.div\n      ref={contextMenuRef}\n      id=\"context-menu\"\n      className=\"absolute flex flex-col rounded-3xl w-[200px] overflow-clip\"\n      style={{\n        background:\n          theme?.chatBackground || \"linear-gradient(180deg, #ffffff, #ffffff)\",\n        top: position.top,\n        left: position.left,\n      }}\n      initial={{\n        opacity: 0,\n        scale: 0.9,\n        transition: {\n          type: \"spring\",\n          stiffness: 300,\n          damping: 20,\n        },\n      }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{\n        opacity: 0,\n        scale: 0.9,\n        transition: {\n          duration: 0.15,\n        },\n      }}\n    >\n      {items.map((item, index) => (\n        <ContextItem\n          key={index}\n          icon={item.icon}\n          text={item.text}\n          onClick={() => {\n            item.onClick();\n            onClose();\n          }}\n          active={activeIndex === index}\n        />\n      ))}\n    </motion.div>\n  );\n}\n\ninterface ContextItemProps {\n  icon: React.ReactNode;\n  text: string;\n  onClick: () => void;\n  active: boolean;\n}\n\nfunction ContextItem({ icon, text, onClick, active }: ContextItemProps) {\n  return (\n    <div>\n      <button\n        onClick={onClick}\n        className={`flex items-center justify-start w-full px-6 py-4 text-sm text-black hover:bg-gray-200 ${\n          active ? \"bg-gray-200\" : \"\"\n        }`}\n      >\n        <p className=\"mr-auto\">{text}</p>\n        {icon}\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2346, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat/emoji-overlay.tsx"],"sourcesContent":["import { AnimatePresence, motion } from \"motion/react\";\nimport EmojiMenu from \"./emoji-menu\";\nimport ContextMenu from \"./context-menu\";\nimport { DEFAULT_THEME, Message, User } from \"@/src/lib/types\";\n\ninterface EmojiOverlayProps {\n    open: boolean;\n    message: Message;\n    messageDiv: HTMLDivElement;\n    user: User;\n    onReact: (messageId: string, reaction?: string | null) => Promise<void>;\n    onEdit: (messageId: string) => void;\n    onCopy: (messageId: string) => void;\n    onReply: (messageId: string) => void;\n    onDelete: (messageId: string) => void;\n    onClose: () => void;\n}\n\nexport const EmojiOverlay: React.FC<EmojiOverlayProps> = ({\n    open,\n    message,\n    messageDiv,\n    user,\n    onReact,\n    onClose,\n    onCopy,\n    onEdit,\n    onReply,\n    onDelete,\n}) => {\n    return (\n        <AnimatePresence>\n            {open && (\n                <div\n                    key=\"emoji-overlay-main\"\n                    id=\"emoji-overlay-main\"\n                    className=\"overflow-visible absolute left-0 top-0 select-none\"\n                >\n                    <motion.div\n                        key=\"emoji-overlay\"\n                        layout\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 0.5 }}\n                        exit={{ opacity: 0 }}\n                        className=\"fixed inset-0 bg-black z-30\"\n                        onClick={onClose}\n                    />\n                    <div key=\"context-container\" className=\"relative z-40 w-full\">\n                        <EmojiMenu\n                            key=\"emoji-menu\"\n                            isUserMessage={message.sender === user.id}\n                            preselectedEmoji={message.reactions?.find(\n                                (r: any) => r.user_id === user.id\n                            )}\n                            messageDiv={messageDiv}\n                            message={message}\n                            onReact={onReact}\n                            onClose={onClose}\n                        />\n\n                        <ContextMenu\n                            onCopy={() => onCopy(message.id)}\n                            onEdit={() => onEdit(message.id)}\n                            onReply={() => onReply(message.id)}\n                            onDelete={() => onDelete(message.id)}\n                            onClose={onClose}\n                            key=\"context-menu\"\n                            theme={DEFAULT_THEME}\n                            anchor={messageDiv}\n                        />\n                    </div>\n                </div>\n            )}\n        </AnimatePresence>\n    );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAeO,MAAM,eAA4C,CAAC,EACtD,IAAI,EACJ,OAAO,EACP,UAAU,EACV,IAAI,EACJ,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,QAAQ,EACX;IACG,qBACI,6LAAC,4LAAA,CAAA,kBAAe;kBACX,sBACG,6LAAC;YAEG,IAAG;YACH,WAAU;;8BAEV,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBAEP,MAAM;oBACN,SAAS;wBAAE,SAAS;oBAAE;oBACtB,SAAS;wBAAE,SAAS;oBAAI;oBACxB,MAAM;wBAAE,SAAS;oBAAE;oBACnB,WAAU;oBACV,SAAS;mBANL;;;;;8BAQR,6LAAC;oBAA4B,WAAU;;sCACnC,6LAAC,8IAAA,CAAA,UAAS;4BAEN,eAAe,QAAQ,MAAM,KAAK,KAAK,EAAE;4BACzC,kBAAkB,QAAQ,SAAS,EAAE,KACjC,CAAC,IAAW,EAAE,OAAO,KAAK,KAAK,EAAE;4BAErC,YAAY;4BACZ,SAAS;4BACT,SAAS;4BACT,SAAS;2BARL;;;;;sCAWR,6LAAC,gJAAA,CAAA,UAAW;4BACR,QAAQ,IAAM,OAAO,QAAQ,EAAE;4BAC/B,QAAQ,IAAM,OAAO,QAAQ,EAAE;4BAC/B,SAAS,IAAM,QAAQ,QAAQ,EAAE;4BACjC,UAAU,IAAM,SAAS,QAAQ,EAAE;4BACnC,SAAS;4BAET,OAAO,sHAAA,CAAA,gBAAa;4BACpB,QAAQ;2BAFJ;;;;;;mBAnBH;;;;;;WAbL;;;;;;;;;;AAyCxB;KAzDa","debugId":null}},
    {"offset": {"line": 2442, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat.tsx"],"sourcesContent":["// components/Chat.tsx\n\n\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  DEFAULT_THEME,\n  Message,\n  type ChatMessage,\n  type User,\n} from \"../lib/types\"; // Make sure this path is correct\nimport ChatMessageItem from \"./chat/chat-message-item\";\nimport { useActualMessages } from \"../hooks/use-actual-messages\";\nimport { EmojiOverlay } from \"./chat/emoji-overlay\";\n\ninterface ChatProps {\n  messages: Message[];\n  sendMessage: (text: string) => void;\n  onReact: (messageId: string, reaction?: string | null) => Promise<void>;\n  endChat: () => void;\n  peerId: string;\n  status: string;\n}\n\nexport default function Chat({\n  messages,\n  sendMessage,\n  endChat,\n  onReact,\n  peerId,\n  status,\n}: ChatProps) {\n  const user: User = { id: peerId };\n\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const chatLogRef = useRef<HTMLDivElement>(null);\n  const isEmojiMenuOpen = useRef(false);\n\n  const [emojiMenuState, setEmojiMenuState] = useState<{\n    open: boolean;\n    message?: Message | null;\n    messageDiv?: HTMLDivElement | null;\n  }>({ open: false });\n  const emojiMenuOpenRef = useRef(false);\n\n  const actualMessages = useActualMessages(messages);\n\n  const onOpenEmojiMenu = (message: Message | null) => {\n    if (!message) {\n      setEmojiMenuState({ open: false });\n      emojiMenuOpenRef.current = false;\n      return;\n    }\n\n    const messageElement = document.querySelector(\n      `[data-message-id=\"${message?.id}\"]`\n    );\n    if (messageElement) {\n      emojiMenuOpenRef.current = true;\n      setEmojiMenuState({\n        open: true,\n        message,\n        messageDiv: messageElement as HTMLDivElement,\n      });\n    }\n  };\n\n  // Auto-scroll to the latest message\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSend = (e: React.FormEvent) => {\n    e.preventDefault();\n    const trimmedMessage = currentMessage.trim();\n    if (trimmedMessage) {\n      sendMessage(trimmedMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  const renderMessage = (msg: Message, index: number) => {\n    const isSystem = msg.sender === \"System\";\n\n    if (isSystem) {\n      return (\n        <div key={index} className=\"text-center my-2\">\n          <span className=\"text-xs text-gray-500 bg-gray-100 rounded-full px-3 py-1\">\n            {msg.content}\n          </span>\n        </div>\n      );\n    }\n\n    const user: User = {\n      id: peerId,\n    };\n\n    return (\n      <ChatMessageItem\n        key={index}\n        index={index}\n        message={msg}\n        user={user}\n        isLast={index === messages.length - 1}\n        onSwipe={() => {}}\n        onStartedSwipe={() => {}}\n        onEndedSwipe={() => {}}\n        onReact={onReact}\n        onOpenEmojiMenu={() => onOpenEmojiMenu(msg)}\n        onResendMessage={() => {}}\n        isEmojiMenuOpen={isEmojiMenuOpen}\n        theme={DEFAULT_THEME}\n        animate={true}\n        secondVisibleElement={null}\n      />\n    );\n  };\n\n  return (\n    <>\n      <EmojiOverlay\n        open={emojiMenuState.open}\n        message={emojiMenuState.message!}\n        messageDiv={emojiMenuState.messageDiv!}\n        user={user}\n        onReact={onReact}\n        onReply={() => {}}\n        onEdit={() => {}}\n        onCopy={() => {}}\n        onDelete={() => {}}\n        onClose={() => onOpenEmojiMenu(null)}\n      />\n\n      {/* Main chat container: h-screen makes it full height, sm:rounded makes it rounded on larger screens */}\n      <div\n        id=\"chat-container\"\n        className=\"w-full max-w-md mx-auto h-screen flex flex-col bg-white/70 backdrop-blur-xl sm:rounded-[2rem] shadow-2xl overflow-hidden\"\n      >\n        {/* Chat Header */}\n        <div className=\"p-4 bg-white/60 border-b border-gray-200/80 flex justify-between items-center shrink-0\">\n          <div className=\"text-left\">\n            <p className=\"text-xs font-medium text-gray-500\">Status</p>\n            <p className=\"text-sm font-semibold text-green-600\">{status}</p>\n          </div>\n          <Button\n            onClick={endChat}\n            variant=\"destructive\"\n            size=\"sm\"\n            className=\"rounded-full\"\n          >\n            End Chat\n          </Button>\n        </div>\n\n          <div className=\"p-2 text-center text-xs text-gray-500 bg-white/60 border-b border-gray-200/80 shrink-0\">\n          not all features are implemented, still in early stages -@tyronscott_\n        </div>\n\n        {/* Chat Log */}\n        <div ref={chatLogRef} className=\"flex-grow overflow-y-auto p-4\">\n          {actualMessages.map(renderMessage)}\n        </div>\n\n        {/* Message Input Form */}\n        <div className=\"p-4 bg-white/60 border-t border-gray-200/80 shrink-0\">\n          <form onSubmit={handleSend} className=\"flex space-x-3\">\n            <Input\n              type=\"text\"\n              value={currentMessage}\n              onChange={(e) => setCurrentMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n              className=\"flex-grow p-3 border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500 bg-white/80\"\n              autoComplete=\"off\"\n              required\n            />\n            <Button\n              type=\"submit\"\n              className=\"bg-green-500 text-white font-bold w-12 h-12 rounded-full hover:bg-green-600 flex items-center justify-center shadow-lg\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line>\n                <polyline points=\"5 12 12 5 19 12\"></polyline>\n              </svg>\n            </Button>\n          </form>\n        </div>\n\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2738, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/hooks/useAnimochat.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { DataConnection, Peer } from \"peerjs\";\nimport type { Screen, MatchmakingData, Message, Reaction } from \"../lib/types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst API_BASE_URL = \"https://animochat-turn-server.onrender.com\";\n\n// This is the data structure we expect to be sent over the PeerJS connection\ntype PeerConnectionPacket = {\n  type: \"message\" | \"reaction\";\n  payload: any;\n};\n\n/**\n * Custom hook to manage all state and logic for the AnimoChat application,\n * including PeerJS setup, matchmaking, and chat state.\n */\nexport const useAnimoChat = () => {\n  const [screen, setScreen] = useState<Screen>(\"intro\");\n  const [peerId, setPeerId] = useState<string>(\"\");\n  const [conn, setConn] = useState<DataConnection | null>(null);\n  const [status, setStatus] = useState<string>(\"Initializing...\");\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isPeerOutdated, setIsPeerOutdated] = useState<boolean>(false); // New state for backward compatibility\n\n  const peerRef = useRef<Peer | null>(null);\n  const matchmakingSource = useRef<EventSource | null>(null);\n\n  const resetState = useCallback((statusMessage = \"Ready to connect\") => {\n    if (conn) conn.close();\n    if (matchmakingSource.current) matchmakingSource.current.close();\n    setConn(null);\n    setMessages([]);\n    setScreen(\"matchmaking\");\n    setStatus(statusMessage);\n    setIsConnecting(false);\n  }, [conn]);\n\n  const handleReaction = useCallback((messageId: string, emoji: string | null, userId: string) => {\n      setMessages((prevMessages) =>\n        prevMessages.map((msg) => {\n          if (msg.id !== messageId || msg.type === 'system') return msg;\n\n          const reactions = msg.reactions || [];\n          const existingReactionIndex = reactions.findIndex((r) => r.user_id === userId);\n          let newReactions: Reaction[];\n\n          if (existingReactionIndex > -1) {\n            if (emoji) {\n              newReactions = [...reactions];\n              newReactions[existingReactionIndex] = { user_id: userId, emoji };\n            } else {\n              newReactions = reactions.filter((_, index) => index !== existingReactionIndex);\n            }\n          } else if (emoji) {\n            newReactions = [...reactions, { user_id: userId, emoji }];\n          } else {\n            newReactions = reactions;\n          }\n          \n          return { ...msg, reactions: newReactions };\n        })\n      );\n  }, []);\n\n\n  const onReact = async (messageId: string, emoji?: string | null) => {\n    if (isPeerOutdated) {\n      console.log(\"Reactions are disabled for outdated clients.\");\n      return; // Do not send reactions to old clients\n    }\n    handleReaction(messageId, emoji || null, peerId);\n    \n    if (conn && conn.open) {\n      const packet: PeerConnectionPacket = {\n        type: \"reaction\",\n        payload: { messageId, emoji: emoji || null, userId: peerId },\n      };\n      conn.send(packet);\n    }\n  };\n\n  const sendMessage = (text: string) => {\n    if (conn && conn.open && text) {\n      const message: Message = {\n        id: uuidv4(),\n        content: text,\n        sender: peerId,\n        session_id: \"1\",\n        created_at: new Date().toISOString(),\n        reactions: [],\n        type: 'user'\n      };\n\n      if (isPeerOutdated) {\n        // Old protocol: send the raw string content.\n        conn.send(message.content);\n      } else {\n        // New protocol: send the structured packet.\n        const packet: PeerConnectionPacket = { type: \"message\", payload: message };\n        conn.send(packet);\n      }\n      \n      setMessages((prev) => [...prev, message]);\n    }\n  };\n\n  const endChat = () => {\n    const systemMessage: Message = {\n      id: uuidv4(),\n      content: \"You have ended the chat.\",\n      type: \"system\",\n      sender: \"system\",\n      created_at: new Date().toISOString(),\n      session_id: \"1\",\n    };\n    setMessages((prev) => [...prev, systemMessage]);\n    resetState(\"Chat ended. Find a new match.\");\n  };\n  \n  useEffect(() => {\n    if (conn) {\n      setIsPeerOutdated(false); // Reset flag on new connection\n      const matchedOn = conn.metadata?.interest || \"an unknown topic\";\n      setMessages([\n        {\n          id: uuidv4(),\n          content: `Connected with a stranger on: ${matchedOn}`,\n          type: \"system\",\n          sender: \"system\",\n          created_at: new Date().toISOString(),\n          session_id: \"1\",\n        },\n      ]);\n\n      conn.on(\"data\", (data: any) => {\n        // OLD PROTOCOL DETECTION: Old clients send raw strings.\n        if (typeof data === 'string') {\n            setIsPeerOutdated(true);\n            \n            // Add the outdated user's message to our chat.\n            const incomingMessage: Message = {\n                id: uuidv4(),\n                content: data,\n                sender: conn.peer,\n                type: 'user',\n                reactions: [],\n                session_id: \"1\",\n                created_at: new Date().toISOString(),\n            };\n            setMessages((prev) => [...prev, incomingMessage]);\n\n            // Add a persistent warning for our user.\n            const warningId = 'outdated-client-warning';\n            setMessages(prev => prev.find(m => m.id === warningId) ? prev : [...prev, {\n                id: warningId,\n                content: \"Your chat partner is using an outdated version. Reactions and other features are disabled.\",\n                type: 'system',\n                sender: 'system',\n                created_at: new Date().toISOString(),\n                session_id: \"1\",\n            }]);\n            \n            // Send a raw string message back to the old client telling them to update.\n            conn.send(\"Your chat partner is using a new version of AnimoChat. Please refresh the page to get the latest features!\");\n            return;\n        }\n\n        // NEW PROTOCOL HANDLING\n        let packet: PeerConnectionPacket;\n        try {\n            packet = typeof data === 'object' && data !== null ? data : JSON.parse(data);\n        } catch (error) {\n            console.error(\"Failed to parse incoming data:\", data);\n            return;\n        }\n        \n        if (packet.type === \"message\") {\n            const message: Message = packet.payload;\n            setMessages((prev) => [...prev, message]);\n        } else if (packet.type === \"reaction\") {\n            const { messageId, emoji, userId } = packet.payload;\n            handleReaction(messageId, emoji, userId);\n        }\n      });\n\n      conn.on(\"close\", () => {\n        const systemMessage: Message = {\n          id: uuidv4(),\n          content: \"Stranger has disconnected.\",\n          type: \"system\",\n          sender: \"system\",\n          created_at: new Date().toISOString(),\n          session_id: \"1\",\n        };\n        setMessages((prev) => [...prev, systemMessage]);\n        resetState(\"Stranger disconnected. Find a new match.\");\n      });\n    }\n  }, [conn, resetState, handleReaction]);\n\n  const initializePeer = useCallback(() => {\n    if (typeof window !== \"undefined\" && !peerRef.current) {\n      import('peerjs').then(({ default: Peer }) => {\n        const newPeer = new Peer();\n        peerRef.current = newPeer;\n        newPeer.on(\"open\", (id) => { setPeerId(id); setStatus(\"Ready to connect\"); setIsConnecting(false); });\n        newPeer.on(\"connection\", (newConn) => { setConn(newConn); setScreen(\"chat\"); setIsConnecting(false); });\n        newPeer.on(\"error\", (err) => { console.error(\"PeerJS error:\", err); resetState(`Error: ${err.type}`); });\n      }).catch(err => console.error(\"Failed to load PeerJS\", err));\n    }\n  }, [resetState]);\n\n  const handleGetStarted = () => {\n    setIsConnecting(true);\n    setScreen(\"matchmaking\");\n    if (!peerRef.current) {\n      initializePeer();\n    }\n  };\n\n  const startMatchmaking = useCallback((interests: string[]) => {\n    if (!peerId || interests.length === 0 || !peerRef.current) return;\n    setStatus(\"Finding a match...\");\n    setIsConnecting(true);\n    const interestsParam = interests.join(\",\");\n    const url = `${API_BASE_URL}/matchmaking?userId=${peerId}&interest=${interestsParam}`;\n    const eventSource = new EventSource(url);\n    matchmakingSource.current = eventSource;\n    eventSource.onopen = () => setStatus(\"Waiting for a match...\");\n    eventSource.onmessage = (event) => {\n      try {\n        const data: MatchmakingData = JSON.parse(event.data);\n        if (data.state === \"MATCHED\" && peerRef.current) {\n          setStatus(\"Match found! Connecting...\");\n          const newConn = peerRef.current.connect(data.matchedUserId, { metadata: { interest: data.interest } });\n          setConn(newConn);\n          setScreen(\"chat\");\n          setIsConnecting(false);\n          eventSource.close();\n        }\n      } catch (e) { console.error(\"Failed to parse matchmaking data:\", e); }\n    };\n    eventSource.onerror = () => { console.error(\"Matchmaking EventSource error.\"); resetState(\"Connection error. Please try again.\"); };\n  }, [peerId, resetState]);\n\n  useEffect(() => {\n    return () => {\n      if (peerRef.current) peerRef.current.destroy();\n      if (matchmakingSource.current) matchmakingSource.current.close();\n    };\n  }, []);\n\n  return {\n    screen,\n    peerId,\n    status,\n    isConnecting,\n    conn,\n    messages,\n    isPeerOutdated, // Export the flag for the UI\n    handleGetStarted,\n    startMatchmaking,\n    endChat,\n    sendMessage,\n    onReact,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3104, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/app/page.tsx"],"sourcesContent":["// App.tsx\n\n\"use client\";\n\nimport BackgroundElements from \"../components/ui/background-elements\";\nimport { useState } from \"react\";\nimport InterestSelector from \"../components/interests-selector\";\nimport Chat from \"../components/chat\"; \nimport { useAnimoChat } from \"../hooks/useAnimochat\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function App() {\n  const {\n    screen,\n    peerId,\n    status,\n    isConnecting,\n    messages,\n    handleGetStarted,\n    startMatchmaking,\n    endChat,\n    sendMessage,\n    onReact,\n    isPeerOutdated, // Import the flag for the UI\n  } = useAnimoChat();\n\n  const [interests, setInterests] = useState<Set<string>>(new Set());\n\n  const handleFindMatch = (interestsToMatch: Set<string>) => {\n    if (interestsToMatch.size === 0) return;\n    startMatchmaking(Array.from(interestsToMatch));\n  };\n\n  const renderScreen = () => {\n    switch (screen) {\n      case \"chat\":\n        return (\n           <div className=\"h-full w-full flex items-center justify-center sm:p-4\">\n              <Chat\n                onReact={onReact}\n                messages={messages}\n                sendMessage={sendMessage}\n                endChat={endChat}\n                peerId={peerId}\n                status={status}\n              />\n          </div>\n        );\n\n      case \"matchmaking\":\n        return (\n          <>\n            <div className=\"max-w-3xl mx-auto relative w-full\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-green-600 to-green-400 bg-clip-text text-transparent\">\n                  Choose Your Interests\n                </h2>\n                <p className=\"text-gray-600 text-lg my-8\">\n                  Find someone to chat with based on what you like.\n                </p>\n              </div>\n            </div>\n            <InterestSelector\n              interests={interests}\n              onInterestsChange={setInterests}\n              onFindMatch={handleFindMatch}\n              isConnecting={isConnecting}\n              status={status}\n            />\n          </>\n        );\n\n      case \"intro\":\n      default:\n        return (\n          <>\n            <div className=\"max-w-3xl mx-auto relative w-full\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-green-600 to-green-400 bg-clip-text text-transparent\">\n                  Real-time\n                  <br />\n                  Anonymous Chat\n                </h2>\n                <p className=\"text-gray-600 text-lg my-8\">\n                  Connect with students anonymously and securely.\n                </p>\n              </div>\n            </div>\n            \n            {/* --- NEW: P2P and Test Information --- */}\n            <div className=\"max-w-md mx-auto text-sm space-y-6 text-center\">\n                <details className=\"text-gray-500 bg-gray-50/80 p-3 rounded-2xl border border-gray-200\">\n                    <summary className=\"cursor-pointer font-medium hover:text-green-600\">What is Peer-to-Peer (P2P) Chat?</summary>\n                    <p className=\"mt-2 text-left\">\n                        Peer-to-Peer chat means your messages go directly to the other user without passing through a central server. This provides better privacy and can be faster. Our server only helps to \"introduce\" two users to each other.\n                    </p>\n                </details>\n\n                <div className=\"text-red-700 bg-red-50 p-4 rounded-2xl border border-red-200 font-medium\">\n                    <p>This is a test version of AnimoChat. Not all features are implemented, and you may encounter bugs.</p>\n                </div>\n            </div>\n\n            <div className=\"text-center mt-12\">\n              <Button\n                onClick={handleGetStarted}\n                disabled={isConnecting}\n                size=\"lg\"\n                className=\"rounded-full py-7 px-8 bg-green-500 hover:bg-green-600 text-white font-bold text-lg\"\n              >\n                {isConnecting ? \"Initializing...\" : \"Get Started\"}\n              </Button>\n            </div>\n          </>\n        );\n    }\n  };\n\n  return (\n    <div className=\"h-full overflow-y-auto overflow-x-hidden\">\n        {/* The main container now adapts its padding based on the screen */}\n        <main className={`container h-full mx-auto flex flex-col ${screen === 'chat' ? 'p-0' : 'px-4 py-8 md:py-16'}`}>\n            {/* Background is only shown on intro/matchmaking screens */}\n            {screen !== 'chat' && <BackgroundElements />}\n\n            <div className=\"flex-grow flex flex-col justify-center items-center\">\n                {renderScreen()}\n            </div>\n\n            {/* Footer is only shown on intro/matchmaking screens */}\n            {screen !== 'chat' && (\n                <footer className=\"text-xs text-gray-500 text-center py-4 shrink-0\">\n                    <h3 className=\"py-4\">\n                        Created by developers from{\" \"}\n                        <span className=\"text-green-700 font-semibold\">\n                        De La Salle Lipa\n                        </span>\n                    </h3>\n                    {peerId && (\n                        <p className=\"font-mono text-gray-400 text-[10px] mt-2\">\n                        Your Peer ID: {peerId}\n                        </p>\n                    )}\n                </footer>\n            )}\n        </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,UAAU;;;;;AAIV;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,EACJ,MAAM,EACN,MAAM,EACN,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,gBAAgB,EAChB,OAAO,EACP,WAAW,EACX,OAAO,EACP,cAAc,EACf,GAAG,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAEf,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IAE5D,MAAM,kBAAkB,CAAC;QACvB,IAAI,iBAAiB,IAAI,KAAK,GAAG;QACjC,iBAAiB,MAAM,IAAI,CAAC;IAC9B;IAEA,MAAM,eAAe;QACnB,OAAQ;YACN,KAAK;gBACH,qBACG,6LAAC;oBAAI,WAAU;8BACZ,cAAA,6LAAC,6HAAA,CAAA,UAAI;wBACH,SAAS;wBACT,UAAU;wBACV,aAAa;wBACb,SAAS;wBACT,QAAQ;wBACR,QAAQ;;;;;;;;;;;YAKlB,KAAK;gBACH,qBACE;;sCACE,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAA4G;;;;;;kDAG1H,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;;;;;;;;;;;;sCAK9C,6LAAC,8IAAA,CAAA,UAAgB;4BACf,WAAW;4BACX,mBAAmB;4BACnB,aAAa;4BACb,cAAc;4BACd,QAAQ;;;;;;;;YAKhB,KAAK;YACL;gBACE,qBACE;;sCACE,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;;4CAA4G;0DAExH,6LAAC;;;;;4CAAK;;;;;;;kDAGR,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;;;;;;;;;;;;sCAO9C,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAQ,WAAU;;sDACf,6LAAC;4CAAQ,WAAU;sDAAkD;;;;;;sDACrE,6LAAC;4CAAE,WAAU;sDAAiB;;;;;;;;;;;;8CAKlC,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC;kDAAE;;;;;;;;;;;;;;;;;sCAIX,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,8HAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU;gCACV,MAAK;gCACL,WAAU;0CAET,eAAe,oBAAoB;;;;;;;;;;;;;QAKhD;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBAEX,cAAA,6LAAC;YAAK,WAAW,CAAC,uCAAuC,EAAE,WAAW,SAAS,QAAQ,sBAAsB;;gBAExG,WAAW,wBAAU,6LAAC,qJAAA,CAAA,UAAkB;;;;;8BAEzC,6LAAC;oBAAI,WAAU;8BACV;;;;;;gBAIJ,WAAW,wBACR,6LAAC;oBAAO,WAAU;;sCACd,6LAAC;4BAAG,WAAU;;gCAAO;gCACU;8CAC3B,6LAAC;oCAAK,WAAU;8CAA+B;;;;;;;;;;;;wBAIlD,wBACG,6LAAC;4BAAE,WAAU;;gCAA2C;gCACzC;;;;;;;;;;;;;;;;;;;;;;;;AAQvC;GAzIwB;;QAalB,gIAAA,CAAA,eAAY;;;KAbM","debugId":null}}]
}