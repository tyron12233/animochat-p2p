{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/ui/background-elements.tsx"],"sourcesContent":["export default function BackgroundElements() {\n    return (\n        <div className=\"fixed inset-0 overflow-hidden pointer-events-none z-5\">\n            {/* Floating Circles */}\n            <div className=\"absolute top-1/4 left-1/4 w-24 h-24 bg-gradient-to-r from-green-100 to-green-50 rounded-full opacity-50 animate-float mix-blend-multiply\"></div>\n\n            {/* Animated Blobs */}\n            <div className=\"absolute top-1/3 right-32 w-48 h-48 bg-green-100 rounded-full opacity-20 animate-blob animation-delay-2000\"></div>\n\n            {/* Floating Squares */}\n            <div className=\"absolute top-2/3 left-16 w-16 h-16 bg-green-50 rotate-45 opacity-30 animate-float animation-delay-3000\"></div>\n\n            {/* Pulse Elements */}\n            <div className=\"absolute bottom-32 right-1/4\">\n                <div className=\"w-32 h-32 border-4 border-green-100 rounded-full animate-pulse opacity-30\"></div>\n            </div>\n\n            {/* Abstract Grid Pattern */}\n            <div className=\"absolute inset-0 opacity-10\">\n                <div className=\"h-full w-full bg-[linear-gradient(to_right,#80808012_1px,transparent_1px),linear-gradient(to_bottom,#80808012_1px,transparent_1px)] bg-[size:24px_24px]\"></div>\n            </div>\n\n            {/* Animated Lines */}\n            <div className=\"absolute top-0 left-0 w-1/3 h-full animate-line\">\n                <div className=\"w-px h-full bg-gradient-to-b from-transparent via-green-100 to-transparent\"></div>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBACI,6LAAC;QAAI,WAAU;;0BAEX,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;0BAInB,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;0BAInB,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAI/B;KA5BwB","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/lib/utils.tsx"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACtC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACxB","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/src/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> { }\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,uHAAA,CAAA,KAAE,AAAD,EACV,6VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/src/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,uHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/interests-selector.tsx"],"sourcesContent":["// components/InterestSelector.tsx\n\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { X } from 'lucide-react';\n\n// Assuming this type is defined in a central types file\nexport type PopularInterest = {\n  interest: string;\n  count: number;\n};\n\n// --- PROPS INTERFACE ---\ninterface InterestSelectorProps {\n  interests: Set<string>;\n  onInterestsChange: (newInterests: Set<string>) => void;\n  onFindMatch: (interests: Set<string>) => void;\n  isConnecting: boolean; // Prop to indicate loading/connecting state\n  status: string; // Prop to display the current status message\n}\n\n// --- CHILD COMPONENT ---\nconst InterestTag = ({ text, onRemove }: { text: string; onRemove: (text: string) => void }) => (\n    <div className=\"tag inline-flex items-center bg-green-600 text-white py-1 px-3 rounded-full m-1 font-medium text-sm transition-all duration-200 animate-in fade-in-50\">\n        <span>{text}</span>\n        <button\n            onClick={() => onRemove(text)}\n            className=\"ml-2 bg-black/10 hover:bg-black/30 rounded-full w-5 h-5 flex items-center justify-center transition-colors\"\n            aria-label={`Remove ${text}`}\n        >\n            <X size={14} />\n        </button>\n    </div>\n);\n\n// --- HELPER COMPONENT ---\nconst LoadingSpinner = () => (\n    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n    </svg>\n);\n\n\n// --- MAIN COMPONENT ---\nexport default function InterestSelector({ interests, onInterestsChange, onFindMatch, isConnecting, status }: InterestSelectorProps) {\n  const [currentInput, setCurrentInput] = useState(\"\");\n  const [popularInterests, setPopularInterests] = useState<PopularInterest[]>([]);\n  const [isLoadingTopics, setIsLoadingTopics] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const API_BASE_URL = 'https://animochat-turn-server.onrender.com';\n\n  useEffect(() => {\n    const fetchPopularInterests = async () => {\n        setIsLoadingTopics(true);\n        try {\n            const response = await fetch(`${API_BASE_URL}/interests/popular`);\n            if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n            const data: PopularInterest[] = await response.json();\n            setPopularInterests(data);\n        } catch (e) {\n            console.error('Failed to fetch popular interests:', e);\n            setError('Could not load topics.');\n        } finally {\n            setIsLoadingTopics(false);\n        }\n    };\n    fetchPopularInterests();\n  }, []);\n\n  const addInterest = (interest: string) => {\n    const cleanedInterest = interest.trim().toUpperCase();\n    if (cleanedInterest && !interests.has(cleanedInterest)) {\n        onInterestsChange(new Set(interests).add(cleanedInterest));\n    }\n    setCurrentInput(\"\");\n  };\n\n  const removeInterest = (interestToRemove: string) => {\n    const newInterests = new Set(interests);\n    newInterests.delete(interestToRemove);\n    onInterestsChange(newInterests);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n          e.preventDefault();\n          addInterest(currentInput);\n      }\n  };\n  \n  const handleFindMatch = () => {\n    let finalInterests = new Set(interests);\n    if (currentInput.trim() && !finalInterests.has(currentInput.trim().toUpperCase())) {\n        finalInterests = new Set(finalInterests).add(currentInput.trim().toUpperCase());\n        onInterestsChange(finalInterests); // Update parent state immediately\n    }\n    onFindMatch(finalInterests);\n  };\n\n  const renderPopularInterests = () => {\n    if (isLoadingTopics) return <p className=\"text-sm text-gray-400\">Loading topics...</p>;\n    if (error) return <p className=\"text-sm text-red-500\">{error}</p>;\n    if (popularInterests.length === 0) return <p className=\"text-sm text-gray-400\">No active topics.</p>;\n    return popularInterests.map(({ interest, count }) => (\n      <button key={interest} onClick={() => addInterest(interest)} className=\"bg-green-100 text-green-800 text-xs font-semibold px-3 py-1.5 rounded-full hover:bg-green-200 hover:scale-105 transition-all duration-200\">\n        <span>{interest}</span>\n        <span className=\"bg-green-200 text-green-900 text-[10px] font-bold px-1.5 py-0.5 rounded-full ml-2\">{count}</span>\n      </button>\n    ));\n  };\n\n  return (\n    <>\n      <div className=\"w-[350px] max-w-full mx-auto\">\n        <div className=\"flex flex-wrap justify-center gap-2 min-h-[36px] mb-4\">\n            {Array.from(interests).map(interest => <InterestTag key={interest} text={interest} onRemove={removeInterest} />)}\n        </div>\n        <Input id=\"interest-input\" type=\"text\" value={currentInput} onChange={(e) => setCurrentInput(e.target.value)} onKeyDown={handleKeyDown} className=\"rounded-full py-6 px-6 focus-visible:border-green-500 focus-visible:ring-green-500 ring-offset-1 text-center\" placeholder=\"Type an interest & press Enter\" maxLength={26}/>\n      </div>\n\n      <div className=\"mt-8 text-center\">\n        <h3 className=\"text-sm font-bold text-gray-500 uppercase tracking-wider mb-4\">Popular Topics</h3>\n        <div className=\"flex flex-wrap justify-center gap-2 max-w-md mx-auto\">{renderPopularInterests()}</div>\n      </div>\n      \n      <div className=\"mt-12 w-[350px] max-w-full mx-auto\">\n        <Button onClick={handleFindMatch} disabled={isConnecting || (interests.size === 0 && !currentInput.trim())} className=\"w-full rounded-full py-6 bg-green-600 hover:bg-green-700 text-white font-bold text-base disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center\">\n          {isConnecting ? (\n            <>\n              <LoadingSpinner />\n              {status}\n            </>\n          ) : (\n            'Find Match'\n          )}\n        </Button>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/components/chat.tsx"],"sourcesContent":["// components/Chat.tsx\n\n\"use client\";\n\nimport React, { useState, useRef, useEffect, forwardRef, CSSProperties } from \"react\";\n\n// --- START: Missing Dependencies ---\n// To make this component self-contained, we are defining the missing\n// types, components, and hooks directly in this file.\n\n// 1. Missing Types from \"../lib/types\"\nconst DEFAULT_THEME = {\n  // Define some default theme properties if needed\n  messageBackgroundColor: '#f0f0f0',\n  userMessageBackgroundColor: '#dcf8c6',\n};\n\ninterface User {\n  id: string;\n  name?: string;\n  avatar?: string;\n}\n\ninterface Message {\n  id: string;\n  content: string;\n  sender: 'You' | 'Other' | 'System';\n  timestamp: string;\n  reactions?: { [key: string]: string[] };\n}\n\n// 2. Mock for \"@/components/ui/button\" and \"@/components/ui/input\"\nconst Button = forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement> & { variant?: string; size?: string }>(\n  ({ className, variant, size, ...props }, ref) => {\n    return (\n      <button\n        className={`${className} inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50`}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nconst Input = forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <input\n        className={`${className} flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50`}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\n// 3. Mock for \"./chat/chat-message-item\"\nconst ChatMessageItem: React.FC<{\n  message: Message;\n  user: User;\n  onOpenEmojiMenu: () => void;\n}> = ({ message, onOpenEmojiMenu }) => {\n  const isYou = message.sender === \"You\";\n  return (\n    <div className={`flex ${isYou ? \"justify-end\" : \"justify-start\"} mb-2`}>\n      <div\n        data-message-id={message.id}\n        className={`max-w-xs rounded-lg p-3 ${\n          isYou\n            ? \"bg-green-200 text-gray-800\"\n            : \"bg-gray-200 text-gray-800\"\n        }`}\n        onClick={onOpenEmojiMenu} // Allow opening emoji menu on click\n      >\n        <p>{message.content}</p>\n      </div>\n    </div>\n  );\n};\n\n\n// 4. Mock for \"../hooks/use-actual-messages\"\nconst useActualMessages = (messages: Message[]) => {\n  // In a real app, this might filter out pending or deleted messages.\n  // For this self-contained component, we'll just return the messages as-is.\n  return messages;\n};\n\n// 5. Mock for \"./chat/emoji-overlay\"\nconst EmojiOverlay: React.FC<{ open: boolean; onClose: () => void; }> = ({ open, onClose }) => {\n  if (!open) return null;\n  // A simple placeholder for the emoji overlay\n  return (\n    <div \n      className=\"fixed inset-0 bg-black/30 z-50 flex items-center justify-center\"\n      onClick={onClose}\n    >\n      <div \n        className=\"bg-white p-4 rounded-lg shadow-xl\"\n        onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside\n      >\n        <p className=\"text-center font-semibold\">Emoji Reactions</p>\n        <div className=\"flex justify-center space-x-2 mt-2\">\n          <span>👍</span>\n          <span>❤️</span>\n          <span>😂</span>\n          <span>😮</span>\n          <span>😢</span>\n        </div>\n         <button onClick={onClose} className=\"mt-4 w-full text-center text-sm text-blue-500\">Close</button>\n      </div>\n    </div>\n  );\n};\n\n// --- END: Missing Dependencies ---\n\ninterface ChatProps {\n  messages: Message[];\n  sendMessage: (text: string) => void;\n  onReact: (messageId: string, reaction?: string | null) => Promise<void>;\n  endChat: () => void;\n  peerId: string;\n  status: string;\n}\n\nexport default function Chat({\n  messages,\n  sendMessage,\n  endChat,\n  onReact,\n  peerId,\n  status,\n}: ChatProps) {\n  const user: User = { id: peerId };\n\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const chatLogRef = useRef<HTMLDivElement>(null);\n\n  const [emojiMenuState, setEmojiMenuState] = useState<{\n    open: boolean;\n    message?: Message | null;\n  }>({ open: false });\n\n  const actualMessages = useActualMessages(messages);\n\n  const onOpenEmojiMenu = (message: Message | null) => {\n    if (!message) {\n      setEmojiMenuState({ open: false });\n      return;\n    }\n    setEmojiMenuState({ open: true, message });\n  };\n\n  // Auto-scroll to the latest message\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSend = (e: React.FormEvent) => {\n    e.preventDefault();\n    const trimmedMessage = currentMessage.trim();\n    if (trimmedMessage) {\n      sendMessage(trimmedMessage);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  const renderMessage = (msg: Message, index: number) => {\n    if (msg.sender === \"System\") {\n      return (\n        <div key={index} className=\"text-center my-2\">\n          <span className=\"text-xs text-gray-500 bg-gray-100 rounded-full px-3 py-1\">\n            {msg.content}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <ChatMessageItem\n        key={msg.id || index}\n        message={msg}\n        user={user}\n        onOpenEmojiMenu={() => onOpenEmojiMenu(msg)}\n      />\n    );\n  };\n\n  return (\n    <>\n      <EmojiOverlay\n        open={emojiMenuState.open}\n        onClose={() => onOpenEmojiMenu(null)}\n        // The rest of the props are handled by the mock component\n      />\n\n      {/* Main chat container: h-screen makes it full height, sm:h-auto and sm:max-h-[90vh] for desktop */}\n      <div\n        id=\"chat-container\"\n        className=\"w-full max-w-md mx-auto h-screen sm:h-auto sm:max-h-[90vh] flex flex-col bg-white/70 backdrop-blur-xl sm:rounded-[2rem] shadow-2xl overflow-hidden\"\n      >\n        {/* Chat Header */}\n        <div className=\"p-4 bg-white/60 border-b border-gray-200/80 flex justify-between items-center shrink-0\">\n          <div className=\"text-left\">\n            <p className=\"text-xs font-medium text-gray-500\">Status</p>\n            <p className=\"text-sm font-semibold text-green-600\">{status}</p>\n          </div>\n          <Button\n            onClick={endChat}\n            variant=\"destructive\"\n            size=\"sm\"\n            className=\"rounded-full bg-red-500 text-white hover:bg-red-600 px-4 py-1\"\n          >\n            End Chat\n          </Button>\n        </div>\n\n        {/* Disclaimer message below header */}\n        <div className=\"p-2 text-center text-xs text-gray-500 bg-white/60 border-b border-gray-200/80 shrink-0\">\n          not all features are implemented, still in early stages -@tyronscott_\n        </div>\n\n        {/* Chat Log */}\n        <div ref={chatLogRef} className=\"flex-grow overflow-y-auto p-4\">\n          {actualMessages.map(renderMessage)}\n        </div>\n\n        {/* Message Input Form */}\n        <div className=\"p-4 bg-white/60 border-t border-gray-200/80 shrink-0\">\n          <form onSubmit={handleSend} className=\"flex items-center space-x-3\">\n            <Input\n              type=\"text\"\n              value={currentMessage}\n              onChange={(e) => setCurrentMessage(e.target.value)}\n              placeholder=\"Type a message...\"\n              className=\"flex-grow p-3 border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500 bg-white/80\"\n              autoComplete=\"off\"\n              required\n            />\n            <Button\n              type=\"submit\"\n              className=\"bg-green-500 text-white font-bold w-12 h-12 rounded-full hover:bg-green-600 flex items-center justify-center shadow-lg\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line>\n                <polyline points=\"5 12 12 5 19 12\"></polyline>\n              </svg>\n            </Button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AAItB;;;AAFA;;AAIA,sCAAsC;AACtC,qEAAqE;AACrE,sDAAsD;AAEtD,uCAAuC;AACvC,MAAM,gBAAgB;IACpB,iDAAiD;IACjD,wBAAwB;IACxB,4BAA4B;AAC9B;AAgBA,mEAAmE;AACnE,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EACtB,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACvC,qBACE,6LAAC;QACC,WAAW,GAAG,UAAU,qQAAqQ,CAAC;QAC9R,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;KATI;AAWN,OAAO,WAAW,GAAG;AAErB,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EACrB,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,GAAG,UAAU,6VAA6V,CAAC;QACtX,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;MATI;AAWN,MAAM,WAAW,GAAG;AAEpB,yCAAyC;AACzC,MAAM,kBAID,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE;IAChC,MAAM,QAAQ,QAAQ,MAAM,KAAK;IACjC,qBACE,6LAAC;QAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,gBAAgB,gBAAgB,KAAK,CAAC;kBACpE,cAAA,6LAAC;YACC,mBAAiB,QAAQ,EAAE;YAC3B,WAAW,CAAC,wBAAwB,EAClC,QACI,+BACA,6BACJ;YACF,SAAS;sBAET,cAAA,6LAAC;0BAAG,QAAQ,OAAO;;;;;;;;;;;;;;;;AAI3B;MArBM;AAwBN,6CAA6C;AAC7C,MAAM,oBAAoB,CAAC;IACzB,oEAAoE;IACpE,2EAA2E;IAC3E,OAAO;AACT;AAEA,qCAAqC;AACrC,MAAM,eAAkE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE;IACxF,IAAI,CAAC,MAAM,OAAO;IAClB,6CAA6C;IAC7C,qBACE,6LAAC;QACC,WAAU;QACV,SAAS;kBAET,cAAA,6LAAC;YACC,WAAU;YACV,SAAS,CAAC,IAAM,EAAE,eAAe;;8BAEjC,6LAAC;oBAAE,WAAU;8BAA4B;;;;;;8BACzC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;sCAAK;;;;;;sCACN,6LAAC;sCAAK;;;;;;sCACN,6LAAC;sCAAK;;;;;;sCACN,6LAAC;sCAAK;;;;;;sCACN,6LAAC;sCAAK;;;;;;;;;;;;8BAEP,6LAAC;oBAAO,SAAS;oBAAS,WAAU;8BAAgD;;;;;;;;;;;;;;;;;AAI7F;MAxBM;AAqCS,SAAS,KAAK,EAC3B,QAAQ,EACR,WAAW,EACX,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACI;;IACV,MAAM,OAAa;QAAE,IAAI;IAAO;IAEhC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAE1C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAGhD;QAAE,MAAM;IAAM;IAEjB,MAAM,iBAAiB,kBAAkB;IAEzC,MAAM,kBAAkB,CAAC;QACvB,IAAI,CAAC,SAAS;YACZ,kBAAkB;gBAAE,MAAM;YAAM;YAChC;QACF;QACA,kBAAkB;YAAE,MAAM;YAAM;QAAQ;IAC1C;IAEA,oCAAoC;IACpC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,IAAI,WAAW,OAAO,EAAE;gBACtB,WAAW,OAAO,CAAC,SAAS,GAAG,WAAW,OAAO,CAAC,YAAY;YAChE;QACF;yBAAG;QAAC;KAAS;IAEb,MAAM,aAAa,CAAC;QAClB,EAAE,cAAc;QAChB,MAAM,iBAAiB,eAAe,IAAI;QAC1C,IAAI,gBAAgB;YAClB,YAAY;YACZ,kBAAkB;QACpB;IACF;IAEA,MAAM,gBAAgB,CAAC,KAAc;QACnC,IAAI,IAAI,MAAM,KAAK,UAAU;YAC3B,qBACE,6LAAC;gBAAgB,WAAU;0BACzB,cAAA,6LAAC;oBAAK,WAAU;8BACb,IAAI,OAAO;;;;;;eAFN;;;;;QAMd;QAEA,qBACE,6LAAC;YAEC,SAAS;YACT,MAAM;YACN,iBAAiB,IAAM,gBAAgB;WAHlC,IAAI,EAAE,IAAI;;;;;IAMrB;IAEA,qBACE;;0BACE,6LAAC;gBACC,MAAM,eAAe,IAAI;gBACzB,SAAS,IAAM,gBAAgB;;;;;;0BAKjC,6LAAC;gBACC,IAAG;gBACH,WAAU;;kCAGV,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAoC;;;;;;kDACjD,6LAAC;wCAAE,WAAU;kDAAwC;;;;;;;;;;;;0CAEvD,6LAAC;gCACC,SAAS;gCACT,SAAQ;gCACR,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;kCAMH,6LAAC;wBAAI,WAAU;kCAAyF;;;;;;kCAKxG,6LAAC;wBAAI,KAAK;wBAAY,WAAU;kCAC7B,eAAe,GAAG,CAAC;;;;;;kCAItB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAK,UAAU;4BAAY,WAAU;;8CACpC,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;oCACjD,aAAY;oCACZ,WAAU;oCACV,cAAa;oCACb,QAAQ;;;;;;8CAEV,6LAAC;oCACC,MAAK;oCACL,WAAU;8CAEV,cAAA,6LAAC;wCACC,OAAM;wCACN,OAAM;wCACN,QAAO;wCACP,SAAQ;wCACR,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;;0DAEf,6LAAC;gDAAK,IAAG;gDAAK,IAAG;gDAAK,IAAG;gDAAK,IAAG;;;;;;0DACjC,6LAAC;gDAAS,QAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjC;GA5IwB;;QAkBC;;;MAlBD","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/hooks/useAnimochat.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { DataConnection, Peer } from \"peerjs\";\nimport type { Screen, MatchmakingData, Message, Reaction } from \"../lib/types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst API_BASE_URL = \"https://animochat-turn-server.onrender.com\";\n\n// This is the data structure we expect to be sent over the PeerJS connection\ntype PeerConnectionPacket = {\n  type: \"message\" | \"reaction\";\n  payload: any;\n};\n\n/**\n * Custom hook to manage all state and logic for the AnimoChat application,\n * including PeerJS setup, matchmaking, and chat state.\n */\nexport const useAnimoChat = () => {\n  const [screen, setScreen] = useState<Screen>(\"intro\");\n  const [peerId, setPeerId] = useState<string>(\"\");\n  const [conn, setConn] = useState<DataConnection | null>(null);\n  const [status, setStatus] = useState<string>(\"Initializing...\");\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isPeerOutdated, setIsPeerOutdated] = useState<boolean>(false); // New state for backward compatibility\n\n  const peerRef = useRef<Peer | null>(null);\n  const matchmakingSource = useRef<EventSource | null>(null);\n\n  const resetState = useCallback((statusMessage = \"Ready to connect\") => {\n    if (conn) conn.close();\n    if (matchmakingSource.current) matchmakingSource.current.close();\n    setConn(null);\n    setMessages([]);\n    setScreen(\"matchmaking\");\n    setStatus(statusMessage);\n    setIsConnecting(false);\n  }, [conn]);\n\n  const handleReaction = useCallback((messageId: string, emoji: string | null, userId: string) => {\n      setMessages((prevMessages) =>\n        prevMessages.map((msg) => {\n          if (msg.id !== messageId || msg.type === 'system') return msg;\n\n          const reactions = msg.reactions || [];\n          const existingReactionIndex = reactions.findIndex((r) => r.user_id === userId);\n          let newReactions: Reaction[];\n\n          if (existingReactionIndex > -1) {\n            if (emoji) {\n              newReactions = [...reactions];\n              newReactions[existingReactionIndex] = { user_id: userId, emoji };\n            } else {\n              newReactions = reactions.filter((_, index) => index !== existingReactionIndex);\n            }\n          } else if (emoji) {\n            newReactions = [...reactions, { user_id: userId, emoji }];\n          } else {\n            newReactions = reactions;\n          }\n          \n          return { ...msg, reactions: newReactions };\n        })\n      );\n  }, []);\n\n\n  const onReact = async (messageId: string, emoji?: string | null) => {\n    if (isPeerOutdated) {\n      console.log(\"Reactions are disabled for outdated clients.\");\n      return; // Do not send reactions to old clients\n    }\n    handleReaction(messageId, emoji || null, peerId);\n    \n    if (conn && conn.open) {\n      const packet: PeerConnectionPacket = {\n        type: \"reaction\",\n        payload: { messageId, emoji: emoji || null, userId: peerId },\n      };\n      conn.send(packet);\n    }\n  };\n\n  const sendMessage = (text: string) => {\n    if (conn && conn.open && text) {\n      const message: Message = {\n        id: uuidv4(),\n        content: text,\n        sender: peerId,\n        session_id: \"1\",\n        created_at: new Date().toISOString(),\n        reactions: [],\n        type: 'user'\n      };\n\n      if (isPeerOutdated) {\n        // Old protocol: send the raw string content.\n        conn.send(message.content);\n      } else {\n        // New protocol: send the structured packet.\n        const packet: PeerConnectionPacket = { type: \"message\", payload: message };\n        conn.send(packet);\n      }\n      \n      setMessages((prev) => [...prev, message]);\n    }\n  };\n\n  const endChat = () => {\n    const systemMessage: Message = {\n      id: uuidv4(),\n      content: \"You have ended the chat.\",\n      type: \"system\",\n      sender: \"system\",\n      created_at: new Date().toISOString(),\n      session_id: \"1\",\n    };\n    setMessages((prev) => [...prev, systemMessage]);\n    resetState(\"Chat ended. Find a new match.\");\n  };\n  \n  useEffect(() => {\n    if (conn) {\n      setIsPeerOutdated(false); // Reset flag on new connection\n      const matchedOn = conn.metadata?.interest || \"an unknown topic\";\n      setMessages([\n        {\n          id: uuidv4(),\n          content: `Connected with a stranger on: ${matchedOn}`,\n          type: \"system\",\n          sender: \"system\",\n          created_at: new Date().toISOString(),\n          session_id: \"1\",\n        },\n      ]);\n\n      conn.on(\"data\", (data: any) => {\n        // OLD PROTOCOL DETECTION: Old clients send raw strings.\n        if (typeof data === 'string') {\n            setIsPeerOutdated(true);\n            \n            // Add the outdated user's message to our chat.\n            const incomingMessage: Message = {\n                id: uuidv4(),\n                content: data,\n                sender: conn.peer,\n                type: 'user',\n                reactions: [],\n                session_id: \"1\",\n                created_at: new Date().toISOString(),\n            };\n            setMessages((prev) => [...prev, incomingMessage]);\n\n            // Add a persistent warning for our user.\n            const warningId = 'outdated-client-warning';\n            setMessages(prev => prev.find(m => m.id === warningId) ? prev : [...prev, {\n                id: warningId,\n                content: \"Your chat partner is using an outdated version. Reactions and other features are disabled.\",\n                type: 'system',\n                sender: 'system',\n                created_at: new Date().toISOString(),\n                session_id: \"1\",\n            }]);\n            \n            // Send a raw string message back to the old client telling them to update.\n            conn.send(\"Your chat partner is using a new version of AnimoChat. Please refresh the page to get the latest features!\");\n            return;\n        }\n\n        // NEW PROTOCOL HANDLING\n        let packet: PeerConnectionPacket;\n        try {\n            packet = typeof data === 'object' && data !== null ? data : JSON.parse(data);\n        } catch (error) {\n            console.error(\"Failed to parse incoming data:\", data);\n            return;\n        }\n        \n        if (packet.type === \"message\") {\n            const message: Message = packet.payload;\n            setMessages((prev) => [...prev, message]);\n        } else if (packet.type === \"reaction\") {\n            const { messageId, emoji, userId } = packet.payload;\n            handleReaction(messageId, emoji, userId);\n        }\n      });\n\n      conn.on(\"close\", () => {\n        const systemMessage: Message = {\n          id: uuidv4(),\n          content: \"Stranger has disconnected.\",\n          type: \"system\",\n          sender: \"system\",\n          created_at: new Date().toISOString(),\n          session_id: \"1\",\n        };\n        setMessages((prev) => [...prev, systemMessage]);\n        resetState(\"Stranger disconnected. Find a new match.\");\n      });\n    }\n  }, [conn, resetState, handleReaction]);\n\n  const initializePeer = useCallback(() => {\n    if (typeof window !== \"undefined\" && !peerRef.current) {\n      import('peerjs').then(({ default: Peer }) => {\n        const newPeer = new Peer();\n        peerRef.current = newPeer;\n        newPeer.on(\"open\", (id) => { setPeerId(id); setStatus(\"Ready to connect\"); setIsConnecting(false); });\n        newPeer.on(\"connection\", (newConn) => { setConn(newConn); setScreen(\"chat\"); setIsConnecting(false); });\n        newPeer.on(\"error\", (err) => { console.error(\"PeerJS error:\", err); resetState(`Error: ${err.type}`); });\n      }).catch(err => console.error(\"Failed to load PeerJS\", err));\n    }\n  }, [resetState]);\n\n  const handleGetStarted = () => {\n    setIsConnecting(true);\n    setScreen(\"matchmaking\");\n    if (!peerRef.current) {\n      initializePeer();\n    }\n  };\n\n  const startMatchmaking = useCallback((interests: string[]) => {\n    if (!peerId || interests.length === 0 || !peerRef.current) return;\n    setStatus(\"Finding a match...\");\n    setIsConnecting(true);\n    const interestsParam = interests.join(\",\");\n    const url = `${API_BASE_URL}/matchmaking?userId=${peerId}&interest=${interestsParam}`;\n    const eventSource = new EventSource(url);\n    matchmakingSource.current = eventSource;\n    eventSource.onopen = () => setStatus(\"Waiting for a match...\");\n    eventSource.onmessage = (event) => {\n      try {\n        const data: MatchmakingData = JSON.parse(event.data);\n        if (data.state === \"MATCHED\" && peerRef.current) {\n          setStatus(\"Match found! Connecting...\");\n          const newConn = peerRef.current.connect(data.matchedUserId, { metadata: { interest: data.interest } });\n          setConn(newConn);\n          setScreen(\"chat\");\n          setIsConnecting(false);\n          eventSource.close();\n        }\n      } catch (e) { console.error(\"Failed to parse matchmaking data:\", e); }\n    };\n    eventSource.onerror = () => { console.error(\"Matchmaking EventSource error.\"); resetState(\"Connection error. Please try again.\"); };\n  }, [peerId, resetState]);\n\n  useEffect(() => {\n    return () => {\n      if (peerRef.current) peerRef.current.destroy();\n      if (matchmakingSource.current) matchmakingSource.current.close();\n    };\n  }, []);\n\n  return {\n    screen,\n    peerId,\n    status,\n    isConnecting,\n    conn,\n    messages,\n    isPeerOutdated, // Export the flag for the UI\n    handleGetStarted,\n    startMatchmaking,\n    endChat,\n    sendMessage,\n    onReact,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1293, "column": 0}, "map": {"version":3,"sources":["file:///home/tyronscott/NodeProjects/animochat-p2p/src/app/page.tsx"],"sourcesContent":["// App.tsx\n\n\"use client\";\n\nimport BackgroundElements from \"../components/ui/background-elements\";\nimport { useState } from \"react\";\nimport InterestSelector from \"../components/interests-selector\";\nimport Chat from \"../components/chat\"; \nimport { useAnimoChat } from \"../hooks/useAnimochat\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function App() {\n  const {\n    screen,\n    peerId,\n    status,\n    isConnecting,\n    messages,\n    handleGetStarted,\n    startMatchmaking,\n    endChat,\n    sendMessage,\n    onReact,\n    isPeerOutdated, // Import the flag for the UI\n  } = useAnimoChat();\n\n  const [interests, setInterests] = useState<Set<string>>(new Set());\n\n  const handleFindMatch = (interestsToMatch: Set<string>) => {\n    if (interestsToMatch.size === 0) return;\n    startMatchmaking(Array.from(interestsToMatch));\n  };\n\n  const renderScreen = () => {\n    switch (screen) {\n      case \"chat\":\n        return (\n           <div className=\"h-full w-full flex items-center justify-center sm:p-4\">\n              <Chat\n                onReact={onReact}\n                messages={messages}\n                sendMessage={sendMessage}\n                endChat={endChat}\n                peerId={peerId}\n                status={status}\n              />\n          </div>\n        );\n\n      case \"matchmaking\":\n        return (\n          <>\n            <div className=\"max-w-3xl mx-auto relative w-full\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-green-600 to-green-400 bg-clip-text text-transparent\">\n                  Choose Your Interests\n                </h2>\n                <p className=\"text-gray-600 text-lg my-8\">\n                  Find someone to chat with based on what you like.\n                </p>\n              </div>\n            </div>\n            <InterestSelector\n              interests={interests}\n              onInterestsChange={setInterests}\n              onFindMatch={handleFindMatch}\n              isConnecting={isConnecting}\n              status={status}\n            />\n          </>\n        );\n\n      case \"intro\":\n      default:\n        return (\n          <>\n            <div className=\"max-w-3xl mx-auto relative w-full\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-green-600 to-green-400 bg-clip-text text-transparent\">\n                  Real-time\n                  <br />\n                  Anonymous Chat\n                </h2>\n                <p className=\"text-gray-600 text-lg my-8\">\n                  Connect with students anonymously and securely.\n                </p>\n              </div>\n            </div>\n            \n            {/* --- NEW: P2P and Test Information --- */}\n            <div className=\"max-w-md mx-auto text-sm space-y-6 text-center\">\n                <details className=\"text-gray-500 bg-gray-50/80 p-3 rounded-2xl border border-gray-200\">\n                    <summary className=\"cursor-pointer font-medium hover:text-green-600\">What is Peer-to-Peer (P2P) Chat?</summary>\n                    <p className=\"mt-2 text-left\">\n                        Peer-to-Peer chat means your messages go directly to the other user without passing through a central server. This provides better privacy and can be faster. Our server only helps to \"introduce\" two users to each other.\n                    </p>\n                </details>\n\n                <div className=\"text-red-700 bg-red-50 p-4 rounded-2xl border border-red-200 font-medium\">\n                    <p>This is a test version of AnimoChat. Not all features are implemented, and you may encounter bugs.</p>\n                </div>\n            </div>\n\n            <div className=\"text-center mt-12\">\n              <Button\n                onClick={handleGetStarted}\n                disabled={isConnecting}\n                size=\"lg\"\n                className=\"rounded-full py-7 px-8 bg-green-500 hover:bg-green-600 text-white font-bold text-lg\"\n              >\n                {isConnecting ? \"Initializing...\" : \"Get Started\"}\n              </Button>\n            </div>\n          </>\n        );\n    }\n  };\n\n  return (\n    <div className=\"h-full overflow-y-auto overflow-x-hidden\">\n        {/* The main container now adapts its padding based on the screen */}\n        <main className={`container h-full mx-auto flex flex-col ${screen === 'chat' ? 'p-0' : 'px-4 py-8 md:py-16'}`}>\n            {/* Background is only shown on intro/matchmaking screens */}\n            {screen !== 'chat' && <BackgroundElements />}\n\n            <div className=\"flex-grow flex flex-col justify-center items-center\">\n                {renderScreen()}\n            </div>\n\n            {/* Footer is only shown on intro/matchmaking screens */}\n            {screen !== 'chat' && (\n                <footer className=\"text-xs text-gray-500 text-center py-4 shrink-0\">\n                    <h3 className=\"py-4\">\n                        Created by developers from{\" \"}\n                        <span className=\"text-green-700 font-semibold\">\n                        De La Salle Lipa\n                        </span>\n                    </h3>\n                    {peerId && (\n                        <p className=\"font-mono text-gray-400 text-[10px] mt-2\">\n                        Your Peer ID: {peerId}\n                        </p>\n                    )}\n                </footer>\n            )}\n        </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,UAAU;;;;;AAIV;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,EACJ,MAAM,EACN,MAAM,EACN,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,gBAAgB,EAChB,gBAAgB,EAChB,OAAO,EACP,WAAW,EACX,OAAO,EACP,cAAc,EACf,GAAG,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;IAEf,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IAE5D,MAAM,kBAAkB,CAAC;QACvB,IAAI,iBAAiB,IAAI,KAAK,GAAG;QACjC,iBAAiB,MAAM,IAAI,CAAC;IAC9B;IAEA,MAAM,eAAe;QACnB,OAAQ;YACN,KAAK;gBACH,qBACG,6LAAC;oBAAI,WAAU;8BACZ,cAAA,6LAAC,6HAAA,CAAA,UAAI;wBACH,SAAS;wBACT,UAAU;wBACV,aAAa;wBACb,SAAS;wBACT,QAAQ;wBACR,QAAQ;;;;;;;;;;;YAKlB,KAAK;gBACH,qBACE;;sCACE,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAA4G;;;;;;kDAG1H,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;;;;;;;;;;;;sCAK9C,6LAAC,8IAAA,CAAA,UAAgB;4BACf,WAAW;4BACX,mBAAmB;4BACnB,aAAa;4BACb,cAAc;4BACd,QAAQ;;;;;;;;YAKhB,KAAK;YACL;gBACE,qBACE;;sCACE,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;;4CAA4G;0DAExH,6LAAC;;;;;4CAAK;;;;;;;kDAGR,6LAAC;wCAAE,WAAU;kDAA6B;;;;;;;;;;;;;;;;;sCAO9C,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAQ,WAAU;;sDACf,6LAAC;4CAAQ,WAAU;sDAAkD;;;;;;sDACrE,6LAAC;4CAAE,WAAU;sDAAiB;;;;;;;;;;;;8CAKlC,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC;kDAAE;;;;;;;;;;;;;;;;;sCAIX,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,8HAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU;gCACV,MAAK;gCACL,WAAU;0CAET,eAAe,oBAAoB;;;;;;;;;;;;;QAKhD;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBAEX,cAAA,6LAAC;YAAK,WAAW,CAAC,uCAAuC,EAAE,WAAW,SAAS,QAAQ,sBAAsB;;gBAExG,WAAW,wBAAU,6LAAC,qJAAA,CAAA,UAAkB;;;;;8BAEzC,6LAAC;oBAAI,WAAU;8BACV;;;;;;gBAIJ,WAAW,wBACR,6LAAC;oBAAO,WAAU;;sCACd,6LAAC;4BAAG,WAAU;;gCAAO;gCACU;8CAC3B,6LAAC;oCAAK,WAAU;8CAA+B;;;;;;;;;;;;wBAIlD,wBACG,6LAAC;4BAAE,WAAU;;gCAA2C;gCACzC;;;;;;;;;;;;;;;;;;;;;;;;AAQvC;GAzIwB;;QAalB,gIAAA,CAAA,eAAY;;;KAbM","debugId":null}}]
}